/*
 *      CONFIDENTIAL AND PROPRIETARY SOFTWARE/DATA OF ARTISAN COMPONENTS, INC.
 *      
 *      Copyright (c) 2019 Artisan Components, Inc.  All Rights Reserved.
 *      
 *      Use of this Software/Data is subject to the terms and conditions of
 *      the applicable license agreement between Artisan Components, Inc. and
 *      Taiwan Semiconductor Manufacturing Company Ltd..  In addition, this Software/Data
 *      is protected by copyright law and international treaties.
 *      
 *      The copyright notice(s) in this Software/Data does not indicate actual
 *      or intended publication of this Software/Data.
 *      name:			RF-2P-HS Register File Generator
 *           			TSMC CL018G Process
 *      version:		2003Q2V2
 *      comment:		
 *      configuration:	 -instname "rf2p_512x64_4_50" -words 512 -bits 64 -frequency 50 -ring_width 10 -mux 4 -drive 3 -write_mask off -wp_size 8 -top_layer met6 -power_type rings -horiz met3 -vert met2 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -libname USERLIB
 *
 *      TLF model for Synchronous Dual-Port Register File
 *
 *      Library Name:   USERLIB
 *      Instance Name:  rf2p_512x64_4_50
 *      Words:          512
 *      Word Width:     64
 *      Mux:            4
 *      Pipeline:       No
 *      Process:        slow
 *
 *      Creation Date:  2019-02-18 16:42:04Z
 *      Version:	2003Q2V2
 *
 *      Verified With: Cadence Central Delay Calculator
 *
 *      Modeling Assumptions: This memory model is written using TLF 3.0
 *          constructs.  Warning and Error messages are issued if an input
 *          encounters a slew over the maximum characterized input slew.
 *          Warning messages are issued if an output is presented with greater
 *          that the maximum characterized load.  SDF created with this model
 *          will annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: Due to the limitations of this tool and the
 *          others it interacts with, some data reduction was necessary.  When
 *          reducing data, minimum values were chosen for the fast case corner
 *          and maximum values were used for the typical and best case corners.
 *          It is recommended that critical timing and setup and hold times be
 *          checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */
header(
  library("USERLIB")
  date("2019-02-18 16:42:07Z")
  vendor("Confidential Information of Artisan Components, Inc.  Use subject to Artisan Components license. Copyright (c) 2019 Artisan Components, Inc.")
  environment("slow")
  technology("CMOS")
  version("2003Q2V2")
  tlf_version("4.1")
)
/* wire load */
net_res_model(gateres (linear value(0:~:8.5e-8:5.0e-8 )))
net_cap_model(gatecap (linear value(0:3:1.0e-4:0.005 3:10:3.0e-4:0.002 )))

/* timing properties */
properties(
  /* models for RC delays */
  net_cap (gatecap)
  net_res (gateres)

  /* operating conditions */
  proc_var(1)
  temperature(125.000)
  voltage(1.620)

  /* multipliers and k-factors */
  proc_mult(1.0)
  temp_mult(1.0)
  volt_mult(1.0)

  /* threshold definitions */
  table_input_threshold (0.500)
  table_output_threshold (0.500)
  table_transition_start (0.100)
  table_transition_end (0.900)

  /* defaults */
  slew_limit(warn(4.000) error(4.000))
  load_limit(1.250) /* max output load */

  /* unit attributes */
  unit(
    time_unit(1ns)
    volt_unit(1V)
    current_unit(1uA)
    power_unit(1mW)
    area_unit(1squ)
    cap_unit (1PF)
  )
)

cell(rf2p_512x64_4_50

Area (518034.639)
CT_TOLERANCE(0.162)

TIMING_model (tch_tasa_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (
	    (0.836:0.836:0.836 0.843:0.843:0.843 0.866:0.866:0.866 0.914:0.914:0.914 0.993:0.993:0.993 1.229:1.229:1.229 1.466:1.466:1.466)
	    (0.832:0.832:0.832 0.839:0.839:0.839 0.862:0.862:0.862 0.910:0.910:0.910 0.989:0.989:0.989 1.225:1.225:1.225 1.462:1.462:1.462)
	    (0.817:0.817:0.817 0.824:0.824:0.824 0.847:0.847:0.847 0.895:0.895:0.895 0.973:0.973:0.973 1.210:1.210:1.210 1.447:1.447:1.447)
	    (0.787:0.787:0.787 0.794:0.794:0.794 0.817:0.817:0.817 0.865:0.865:0.865 0.943:0.943:0.943 1.180:1.180:1.180 1.417:1.417:1.417)
	    (0.737:0.737:0.737 0.744:0.744:0.744 0.767:0.767:0.767 0.815:0.815:0.815 0.893:0.893:0.893 1.130:1.130:1.130 1.366:1.366:1.366)
	    (0.587:0.587:0.587 0.593:0.593:0.593 0.617:0.617:0.617 0.664:0.664:0.664 0.743:0.743:0.743 0.980:0.980:0.980 1.216:1.216:1.216)
	    (0.437:0.437:0.437 0.443:0.443:0.443 0.467:0.467:0.467 0.514:0.514:0.514 0.593:0.593:0.593 0.830:0.830:0.830 1.066:1.066:1.066)
	  )))
TIMING_model (tch_tasa_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (
	    (0.836:0.836:0.836 0.843:0.843:0.843 0.866:0.866:0.866 0.914:0.914:0.914 0.993:0.993:0.993 1.229:1.229:1.229 1.466:1.466:1.466)
	    (0.832:0.832:0.832 0.839:0.839:0.839 0.862:0.862:0.862 0.910:0.910:0.910 0.989:0.989:0.989 1.225:1.225:1.225 1.462:1.462:1.462)
	    (0.817:0.817:0.817 0.824:0.824:0.824 0.847:0.847:0.847 0.895:0.895:0.895 0.973:0.973:0.973 1.210:1.210:1.210 1.447:1.447:1.447)
	    (0.787:0.787:0.787 0.794:0.794:0.794 0.817:0.817:0.817 0.865:0.865:0.865 0.943:0.943:0.943 1.180:1.180:1.180 1.417:1.417:1.417)
	    (0.737:0.737:0.737 0.744:0.744:0.744 0.767:0.767:0.767 0.815:0.815:0.815 0.893:0.893:0.893 1.130:1.130:1.130 1.366:1.366:1.366)
	    (0.587:0.587:0.587 0.593:0.593:0.593 0.617:0.617:0.617 0.664:0.664:0.664 0.743:0.743:0.743 0.980:0.980:0.980 1.216:1.216:1.216)
	    (0.437:0.437:0.437 0.443:0.443:0.443 0.467:0.467:0.467 0.514:0.514:0.514 0.593:0.593:0.593 0.830:0.830:0.830 1.066:1.066:1.066)
	  )))
TIMING_model (tch_taha_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (
	    (0.074:0.074:0.074 0.068:0.068:0.068 0.044:0.044:0.044 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.074:0.074:0.074 0.068:0.068:0.068 0.044:0.044:0.044 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.074:0.074:0.074 0.068:0.068:0.068 0.044:0.044:0.044 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.074:0.074:0.074 0.068:0.068:0.068 0.044:0.044:0.044 0.011:0.011:0.011 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.102:0.102:0.102 0.099:0.099:0.099 0.086:0.086:0.086 0.061:0.061:0.061 0.018:0.018:0.018 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.252:0.252:0.252 0.249:0.249:0.249 0.236:0.236:0.236 0.211:0.211:0.211 0.169:0.169:0.169 0.042:0.042:0.042 0.000:0.000:0.000)
	    (0.403:0.403:0.403 0.399:0.399:0.399 0.386:0.386:0.386 0.361:0.361:0.361 0.319:0.319:0.319 0.192:0.192:0.192 0.066:0.066:0.066)
	  )))
TIMING_model (tch_taha_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (
	    (0.074:0.074:0.074 0.068:0.068:0.068 0.044:0.044:0.044 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.074:0.074:0.074 0.068:0.068:0.068 0.044:0.044:0.044 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.074:0.074:0.074 0.068:0.068:0.068 0.044:0.044:0.044 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.074:0.074:0.074 0.068:0.068:0.068 0.044:0.044:0.044 0.011:0.011:0.011 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.102:0.102:0.102 0.099:0.099:0.099 0.086:0.086:0.086 0.061:0.061:0.061 0.018:0.018:0.018 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.252:0.252:0.252 0.249:0.249:0.249 0.236:0.236:0.236 0.211:0.211:0.211 0.169:0.169:0.169 0.042:0.042:0.042 0.000:0.000:0.000)
	    (0.403:0.403:0.403 0.399:0.399:0.399 0.386:0.386:0.386 0.361:0.361:0.361 0.319:0.319:0.319 0.192:0.192:0.192 0.066:0.066:0.066)
	  )))
TIMING_model (tch_tasb_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (
	    (0.812:0.812:0.812 0.819:0.819:0.819 0.842:0.842:0.842 0.890:0.890:0.890 0.969:0.969:0.969 1.205:1.205:1.205 1.442:1.442:1.442)
	    (0.808:0.808:0.808 0.815:0.815:0.815 0.838:0.838:0.838 0.886:0.886:0.886 0.965:0.965:0.965 1.201:1.201:1.201 1.438:1.438:1.438)
	    (0.793:0.793:0.793 0.800:0.800:0.800 0.823:0.823:0.823 0.871:0.871:0.871 0.950:0.950:0.950 1.186:1.186:1.186 1.423:1.423:1.423)
	    (0.763:0.763:0.763 0.770:0.770:0.770 0.793:0.793:0.793 0.841:0.841:0.841 0.920:0.920:0.920 1.156:1.156:1.156 1.393:1.393:1.393)
	    (0.713:0.713:0.713 0.720:0.720:0.720 0.743:0.743:0.743 0.791:0.791:0.791 0.869:0.869:0.869 1.106:1.106:1.106 1.343:1.343:1.343)
	    (0.563:0.563:0.563 0.569:0.569:0.569 0.593:0.593:0.593 0.640:0.640:0.640 0.719:0.719:0.719 0.956:0.956:0.956 1.192:1.192:1.192)
	    (0.413:0.413:0.413 0.419:0.419:0.419 0.443:0.443:0.443 0.490:0.490:0.490 0.569:0.569:0.569 0.806:0.806:0.806 1.042:1.042:1.042)
	  )))
TIMING_model (tch_tasb_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (
	    (0.812:0.812:0.812 0.819:0.819:0.819 0.842:0.842:0.842 0.890:0.890:0.890 0.969:0.969:0.969 1.205:1.205:1.205 1.442:1.442:1.442)
	    (0.808:0.808:0.808 0.815:0.815:0.815 0.838:0.838:0.838 0.886:0.886:0.886 0.965:0.965:0.965 1.201:1.201:1.201 1.438:1.438:1.438)
	    (0.793:0.793:0.793 0.800:0.800:0.800 0.823:0.823:0.823 0.871:0.871:0.871 0.950:0.950:0.950 1.186:1.186:1.186 1.423:1.423:1.423)
	    (0.763:0.763:0.763 0.770:0.770:0.770 0.793:0.793:0.793 0.841:0.841:0.841 0.920:0.920:0.920 1.156:1.156:1.156 1.393:1.393:1.393)
	    (0.713:0.713:0.713 0.720:0.720:0.720 0.743:0.743:0.743 0.791:0.791:0.791 0.869:0.869:0.869 1.106:1.106:1.106 1.343:1.343:1.343)
	    (0.563:0.563:0.563 0.569:0.569:0.569 0.593:0.593:0.593 0.640:0.640:0.640 0.719:0.719:0.719 0.956:0.956:0.956 1.192:1.192:1.192)
	    (0.413:0.413:0.413 0.419:0.419:0.419 0.443:0.443:0.443 0.490:0.490:0.490 0.569:0.569:0.569 0.806:0.806:0.806 1.042:1.042:1.042)
	  )))
TIMING_model (tch_tahb_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (
	    (0.082:0.082:0.082 0.075:0.075:0.075 0.052:0.052:0.052 0.004:0.004:0.004 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.082:0.082:0.082 0.075:0.075:0.075 0.052:0.052:0.052 0.004:0.004:0.004 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.082:0.082:0.082 0.075:0.075:0.075 0.052:0.052:0.052 0.004:0.004:0.004 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.082:0.082:0.082 0.075:0.075:0.075 0.052:0.052:0.052 0.015:0.015:0.015 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.106:0.106:0.106 0.103:0.103:0.103 0.090:0.090:0.090 0.065:0.065:0.065 0.022:0.022:0.022 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.256:0.256:0.256 0.253:0.253:0.253 0.240:0.240:0.240 0.215:0.215:0.215 0.173:0.173:0.173 0.046:0.046:0.046 0.000:0.000:0.000)
	    (0.406:0.406:0.406 0.403:0.403:0.403 0.390:0.390:0.390 0.365:0.365:0.365 0.323:0.323:0.323 0.196:0.196:0.196 0.069:0.069:0.069)
	  )))
TIMING_model (tch_tahb_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (
	    (0.082:0.082:0.082 0.075:0.075:0.075 0.052:0.052:0.052 0.004:0.004:0.004 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.082:0.082:0.082 0.075:0.075:0.075 0.052:0.052:0.052 0.004:0.004:0.004 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.082:0.082:0.082 0.075:0.075:0.075 0.052:0.052:0.052 0.004:0.004:0.004 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.082:0.082:0.082 0.075:0.075:0.075 0.052:0.052:0.052 0.015:0.015:0.015 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.106:0.106:0.106 0.103:0.103:0.103 0.090:0.090:0.090 0.065:0.065:0.065 0.022:0.022:0.022 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.256:0.256:0.256 0.253:0.253:0.253 0.240:0.240:0.240 0.215:0.215:0.215 0.173:0.173:0.173 0.046:0.046:0.046 0.000:0.000:0.000)
	    (0.406:0.406:0.406 0.403:0.403:0.403 0.390:0.390:0.390 0.365:0.365:0.365 0.323:0.323:0.323 0.196:0.196:0.196 0.069:0.069:0.069)
	  )))
TIMING_model (tch_tcsa_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (
	    (0.712:0.712:0.712 0.718:0.718:0.718 0.740:0.740:0.740 0.785:0.785:0.785 0.860:0.860:0.860 1.085:1.085:1.085 1.309:1.309:1.309)
	    (0.708:0.708:0.708 0.714:0.714:0.714 0.736:0.736:0.736 0.781:0.781:0.781 0.856:0.856:0.856 1.081:1.081:1.081 1.305:1.305:1.305)
	    (0.692:0.692:0.692 0.698:0.698:0.698 0.721:0.721:0.721 0.766:0.766:0.766 0.841:0.841:0.841 1.066:1.066:1.066 1.290:1.290:1.290)
	    (0.662:0.662:0.662 0.668:0.668:0.668 0.691:0.691:0.691 0.736:0.736:0.736 0.811:0.811:0.811 1.036:1.036:1.036 1.260:1.260:1.260)
	    (0.612:0.612:0.612 0.618:0.618:0.618 0.641:0.641:0.641 0.686:0.686:0.686 0.761:0.761:0.761 0.986:0.986:0.986 1.210:1.210:1.210)
	    (0.462:0.462:0.462 0.468:0.468:0.468 0.491:0.491:0.491 0.536:0.536:0.536 0.611:0.611:0.611 0.835:0.835:0.835 1.060:1.060:1.060)
	    (0.312:0.312:0.312 0.318:0.318:0.318 0.340:0.340:0.340 0.385:0.385:0.385 0.460:0.460:0.460 0.685:0.685:0.685 0.910:0.910:0.910)
	  )))
TIMING_model (tch_tcsa_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (
	    (0.712:0.712:0.712 0.718:0.718:0.718 0.740:0.740:0.740 0.785:0.785:0.785 0.860:0.860:0.860 1.085:1.085:1.085 1.309:1.309:1.309)
	    (0.708:0.708:0.708 0.714:0.714:0.714 0.736:0.736:0.736 0.781:0.781:0.781 0.856:0.856:0.856 1.081:1.081:1.081 1.305:1.305:1.305)
	    (0.692:0.692:0.692 0.698:0.698:0.698 0.721:0.721:0.721 0.766:0.766:0.766 0.841:0.841:0.841 1.066:1.066:1.066 1.290:1.290:1.290)
	    (0.662:0.662:0.662 0.668:0.668:0.668 0.691:0.691:0.691 0.736:0.736:0.736 0.811:0.811:0.811 1.036:1.036:1.036 1.260:1.260:1.260)
	    (0.612:0.612:0.612 0.618:0.618:0.618 0.641:0.641:0.641 0.686:0.686:0.686 0.761:0.761:0.761 0.986:0.986:0.986 1.210:1.210:1.210)
	    (0.462:0.462:0.462 0.468:0.468:0.468 0.491:0.491:0.491 0.536:0.536:0.536 0.611:0.611:0.611 0.835:0.835:0.835 1.060:1.060:1.060)
	    (0.312:0.312:0.312 0.318:0.318:0.318 0.340:0.340:0.340 0.385:0.385:0.385 0.460:0.460:0.460 0.685:0.685:0.685 0.910:0.910:0.910)
	  )))
TIMING_model (tch_tcha_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.102:0.102:0.102 0.096:0.096:0.096 0.080:0.080:0.080 0.054:0.054:0.054 0.011:0.011:0.011 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.252:0.252:0.252 0.246:0.246:0.246 0.230:0.230:0.230 0.205:0.205:0.205 0.162:0.162:0.162 0.033:0.033:0.033 0.000:0.000:0.000)
	  )))
TIMING_model (tch_tcha_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.102:0.102:0.102 0.096:0.096:0.096 0.080:0.080:0.080 0.054:0.054:0.054 0.011:0.011:0.011 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.252:0.252:0.252 0.246:0.246:0.246 0.230:0.230:0.230 0.205:0.205:0.205 0.162:0.162:0.162 0.033:0.033:0.033 0.000:0.000:0.000)
	  )))
TIMING_model (tch_tcsb_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (
	    (0.673:0.673:0.673 0.679:0.679:0.679 0.701:0.701:0.701 0.746:0.746:0.746 0.821:0.821:0.821 1.046:1.046:1.046 1.271:1.271:1.271)
	    (0.669:0.669:0.669 0.675:0.675:0.675 0.697:0.697:0.697 0.742:0.742:0.742 0.817:0.817:0.817 1.042:1.042:1.042 1.267:1.267:1.267)
	    (0.654:0.654:0.654 0.660:0.660:0.660 0.682:0.682:0.682 0.727:0.727:0.727 0.802:0.802:0.802 1.027:1.027:1.027 1.252:1.252:1.252)
	    (0.624:0.624:0.624 0.630:0.630:0.630 0.652:0.652:0.652 0.697:0.697:0.697 0.772:0.772:0.772 0.997:0.997:0.997 1.222:1.222:1.222)
	    (0.574:0.574:0.574 0.580:0.580:0.580 0.602:0.602:0.602 0.647:0.647:0.647 0.722:0.722:0.722 0.947:0.947:0.947 1.172:1.172:1.172)
	    (0.424:0.424:0.424 0.430:0.430:0.430 0.452:0.452:0.452 0.497:0.497:0.497 0.572:0.572:0.572 0.797:0.797:0.797 1.022:1.022:1.022)
	    (0.273:0.273:0.273 0.279:0.279:0.279 0.302:0.302:0.302 0.347:0.347:0.347 0.422:0.422:0.422 0.647:0.647:0.647 0.871:0.871:0.871)
	  )))
TIMING_model (tch_tcsb_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (
	    (0.673:0.673:0.673 0.679:0.679:0.679 0.701:0.701:0.701 0.746:0.746:0.746 0.821:0.821:0.821 1.046:1.046:1.046 1.271:1.271:1.271)
	    (0.669:0.669:0.669 0.675:0.675:0.675 0.697:0.697:0.697 0.742:0.742:0.742 0.817:0.817:0.817 1.042:1.042:1.042 1.267:1.267:1.267)
	    (0.654:0.654:0.654 0.660:0.660:0.660 0.682:0.682:0.682 0.727:0.727:0.727 0.802:0.802:0.802 1.027:1.027:1.027 1.252:1.252:1.252)
	    (0.624:0.624:0.624 0.630:0.630:0.630 0.652:0.652:0.652 0.697:0.697:0.697 0.772:0.772:0.772 0.997:0.997:0.997 1.222:1.222:1.222)
	    (0.574:0.574:0.574 0.580:0.580:0.580 0.602:0.602:0.602 0.647:0.647:0.647 0.722:0.722:0.722 0.947:0.947:0.947 1.172:1.172:1.172)
	    (0.424:0.424:0.424 0.430:0.430:0.430 0.452:0.452:0.452 0.497:0.497:0.497 0.572:0.572:0.572 0.797:0.797:0.797 1.022:1.022:1.022)
	    (0.273:0.273:0.273 0.279:0.279:0.279 0.302:0.302:0.302 0.347:0.347:0.347 0.422:0.422:0.422 0.647:0.647:0.647 0.871:0.871:0.871)
	  )))
TIMING_model (tch_tchb_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.106:0.106:0.106 0.100:0.100:0.100 0.084:0.084:0.084 0.058:0.058:0.058 0.015:0.015:0.015 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.256:0.256:0.256 0.250:0.250:0.250 0.234:0.234:0.234 0.208:0.208:0.208 0.165:0.165:0.165 0.036:0.036:0.036 0.000:0.000:0.000)
	  )))
TIMING_model (tch_tchb_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.106:0.106:0.106 0.100:0.100:0.100 0.084:0.084:0.084 0.058:0.058:0.058 0.015:0.015:0.015 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.256:0.256:0.256 0.250:0.250:0.250 0.234:0.234:0.234 0.208:0.208:0.208 0.165:0.165:0.165 0.036:0.036:0.036 0.000:0.000:0.000)
	  )))
TIMING_model (tch_tdsb_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (
	    (0.023:0.023:0.023 0.028:0.028:0.028 0.047:0.047:0.047 0.085:0.085:0.085 0.149:0.149:0.149 0.340:0.340:0.340 0.532:0.532:0.532)
	    (0.019:0.019:0.019 0.024:0.024:0.024 0.043:0.043:0.043 0.081:0.081:0.081 0.145:0.145:0.145 0.336:0.336:0.336 0.528:0.528:0.528)
	    (0.004:0.004:0.004 0.009:0.009:0.009 0.028:0.028:0.028 0.066:0.066:0.066 0.130:0.130:0.130 0.321:0.321:0.321 0.513:0.513:0.513)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.036:0.036:0.036 0.100:0.100:0.100 0.291:0.291:0.291 0.483:0.483:0.483)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.050:0.050:0.050 0.241:0.241:0.241 0.432:0.432:0.432)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.091:0.091:0.091 0.282:0.282:0.282)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.132:0.132:0.132)
	  )))
TIMING_model (tch_tdsb_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (
	    (0.023:0.023:0.023 0.028:0.028:0.028 0.047:0.047:0.047 0.085:0.085:0.085 0.149:0.149:0.149 0.340:0.340:0.340 0.532:0.532:0.532)
	    (0.019:0.019:0.019 0.024:0.024:0.024 0.043:0.043:0.043 0.081:0.081:0.081 0.145:0.145:0.145 0.336:0.336:0.336 0.528:0.528:0.528)
	    (0.004:0.004:0.004 0.009:0.009:0.009 0.028:0.028:0.028 0.066:0.066:0.066 0.130:0.130:0.130 0.321:0.321:0.321 0.513:0.513:0.513)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.036:0.036:0.036 0.100:0.100:0.100 0.291:0.291:0.291 0.483:0.483:0.483)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.050:0.050:0.050 0.241:0.241:0.241 0.432:0.432:0.432)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.091:0.091:0.091 0.282:0.282:0.282)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.132:0.132:0.132)
	  )))
TIMING_model (tch_tdhb_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (
	    (0.290:0.290:0.290 0.287:0.287:0.287 0.275:0.275:0.275 0.252:0.252:0.252 0.213:0.213:0.213 0.098:0.098:0.098 0.000:0.000:0.000)
	    (0.294:0.294:0.294 0.291:0.291:0.291 0.279:0.279:0.279 0.256:0.256:0.256 0.217:0.217:0.217 0.102:0.102:0.102 0.000:0.000:0.000)
	    (0.309:0.309:0.309 0.306:0.306:0.306 0.294:0.294:0.294 0.271:0.271:0.271 0.232:0.232:0.232 0.117:0.117:0.117 0.001:0.001:0.001)
	    (0.339:0.339:0.339 0.336:0.336:0.336 0.324:0.324:0.324 0.301:0.301:0.301 0.262:0.262:0.262 0.147:0.147:0.147 0.031:0.031:0.031)
	    (0.389:0.389:0.389 0.386:0.386:0.386 0.374:0.374:0.374 0.351:0.351:0.351 0.313:0.313:0.313 0.197:0.197:0.197 0.081:0.081:0.081)
	    (0.539:0.539:0.539 0.536:0.536:0.536 0.524:0.524:0.524 0.501:0.501:0.501 0.463:0.463:0.463 0.347:0.347:0.347 0.232:0.232:0.232)
	    (0.689:0.689:0.689 0.686:0.686:0.686 0.675:0.675:0.675 0.651:0.651:0.651 0.613:0.613:0.613 0.497:0.497:0.497 0.382:0.382:0.382)
	  )))
TIMING_model (tch_tdhb_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (
	    (0.290:0.290:0.290 0.287:0.287:0.287 0.275:0.275:0.275 0.252:0.252:0.252 0.213:0.213:0.213 0.098:0.098:0.098 0.000:0.000:0.000)
	    (0.294:0.294:0.294 0.291:0.291:0.291 0.279:0.279:0.279 0.256:0.256:0.256 0.217:0.217:0.217 0.102:0.102:0.102 0.000:0.000:0.000)
	    (0.309:0.309:0.309 0.306:0.306:0.306 0.294:0.294:0.294 0.271:0.271:0.271 0.232:0.232:0.232 0.117:0.117:0.117 0.001:0.001:0.001)
	    (0.339:0.339:0.339 0.336:0.336:0.336 0.324:0.324:0.324 0.301:0.301:0.301 0.262:0.262:0.262 0.147:0.147:0.147 0.031:0.031:0.031)
	    (0.389:0.389:0.389 0.386:0.386:0.386 0.374:0.374:0.374 0.351:0.351:0.351 0.313:0.313:0.313 0.197:0.197:0.197 0.081:0.081:0.081)
	    (0.539:0.539:0.539 0.536:0.536:0.536 0.524:0.524:0.524 0.501:0.501:0.501 0.463:0.463:0.463 0.347:0.347:0.347 0.232:0.232:0.232)
	    (0.689:0.689:0.689 0.686:0.686:0.686 0.675:0.675:0.675 0.651:0.651:0.651 0.613:0.613:0.613 0.497:0.497:0.497 0.382:0.382:0.382)
	  )))
TIMING_model (period_tcyca (const (3.75877534240292)))
TIMING_model (tpw_tckla (const (0.4483)))
TIMING_model (tpw_tckha (const (0.2495)))
TIMING_model (period_tcycb (const (3.37903928865808)))
TIMING_model (tpw_tcklb (const (0.3767)))
TIMING_model (tpw_tckhb (const (0.2359)))
TIMING_model (tch_tcc (const (1.809397351499)))
TIMING_model (sl_qar 	(spline
	  (load_axis 0.000 0.015 0.062 0.155 0.311 0.777 1.250)
	  ((0.095 0.143 0.294 0.591 1.090 2.581 4.094))))
TIMING_model (sl_qaf 	(spline
	  (load_axis 0.000 0.015 0.062 0.155 0.311 0.777 1.250)
	  ((0.158 0.194 0.307 0.531 0.905 2.025 3.162))))
TIMING_model (dly_taar 	(spline
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (load_axis 0.000 0.015 0.062 0.155 0.311 0.777 1.250)
	  (
	    (2.684:2.684:2.684 2.708:2.708:2.708 2.781:2.781:2.781 2.925:2.925:2.925 3.168:3.168:3.168 3.893:3.893:3.893 4.628:4.628:4.628)
	    (2.688:2.688:2.688 2.712:2.712:2.712 2.785:2.785:2.785 2.929:2.929:2.929 3.172:3.172:3.172 3.897:3.897:3.897 4.632:4.632:4.632)
	    (2.703:2.703:2.703 2.727:2.727:2.727 2.800:2.800:2.800 2.944:2.944:2.944 3.187:3.187:3.187 3.912:3.912:3.912 4.647:4.647:4.647)
	    (2.733:2.733:2.733 2.757:2.757:2.757 2.830:2.830:2.830 2.974:2.974:2.974 3.217:3.217:3.217 3.942:3.942:3.942 4.677:4.677:4.677)
	    (2.783:2.783:2.783 2.807:2.807:2.807 2.880:2.880:2.880 3.024:3.024:3.024 3.267:3.267:3.267 3.992:3.992:3.992 4.728:4.728:4.728)
	    (2.934:2.934:2.934 2.957:2.957:2.957 3.030:3.030:3.030 3.175:3.175:3.175 3.417:3.417:3.417 4.142:4.142:4.142 4.878:4.878:4.878)
	    (3.084:3.084:3.084 3.107:3.107:3.107 3.180:3.180:3.180 3.325:3.325:3.325 3.567:3.567:3.567 4.292:4.292:4.292 5.028:5.028:5.028)
	  )))
TIMING_model (dly_taaf 	(spline
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.500 4.000)
	  (load_axis 0.000 0.015 0.062 0.155 0.311 0.777 1.250)
	  (
	    (2.763:2.763:2.763 2.783:2.783:2.783 2.847:2.847:2.847 2.971:2.971:2.971 3.181:3.181:3.181 3.806:3.806:3.806 4.442:4.442:4.442)
	    (2.767:2.767:2.767 2.787:2.787:2.787 2.851:2.851:2.851 2.975:2.975:2.975 3.185:3.185:3.185 3.810:3.810:3.810 4.446:4.446:4.446)
	    (2.782:2.782:2.782 2.802:2.802:2.802 2.866:2.866:2.866 2.990:2.990:2.990 3.200:3.200:3.200 3.825:3.825:3.825 4.461:4.461:4.461)
	    (2.812:2.812:2.812 2.832:2.832:2.832 2.896:2.896:2.896 3.020:3.020:3.020 3.230:3.230:3.230 3.856:3.856:3.856 4.491:4.491:4.491)
	    (2.862:2.862:2.862 2.883:2.883:2.883 2.946:2.946:2.946 3.071:3.071:3.071 3.280:3.280:3.280 3.906:3.906:3.906 4.541:4.541:4.541)
	    (3.013:3.013:3.013 3.033:3.033:3.033 3.096:3.096:3.096 3.221:3.221:3.221 3.430:3.430:3.430 4.056:4.056:4.056 4.691:4.691:4.691)
	    (3.163:3.163:3.163 3.183:3.183:3.183 3.246:3.246:3.246 3.371:3.371:3.371 3.580:3.580:3.580 4.206:4.206:4.206 4.841:4.841:4.841)
	  )))

bus(QA[63:0] bustype(output)
 load_limit(warn(1.250) error(2.147483647e3))
 capacitance(0.0)
)
bus(AA[8:0] bustype(input)
 capacitance(0.050)
)
bus(AB[8:0] bustype(input)
 capacitance(0.050)
)
pin(CENA pintype(input)
 capacitance(0.004)
)
pin(CENB pintype(input)
 capacitance(0.003)
)
pin(CLKA clock_pin pintype(input)
 slew_limit(warn(4.000) error(4.000))
 capacitance(0.089)
)
pin(CLKB clock_pin pintype(input)
 slew_limit(warn(4.000) error(4.000))
 capacitance(0.094)
)
bus(DB[63:0] bustype(input)
 capacitance(0.003)
)
pin(VDD pintype(supply) vdrop_limit(0.081))
pin(VSS pintype(ground) vdrop_limit(0.081))
setup (AA[0] => CLKA 01 posedge tch_tasa_rise)
setup (AA[0] => CLKA 10 posedge tch_tasa_fall)
hold (AA[0] => CLKA 01 posedge tch_taha_rise)
hold (AA[0] => CLKA 10 posedge tch_taha_fall)
setup (AA[1] => CLKA 01 posedge tch_tasa_rise)
setup (AA[1] => CLKA 10 posedge tch_tasa_fall)
hold (AA[1] => CLKA 01 posedge tch_taha_rise)
hold (AA[1] => CLKA 10 posedge tch_taha_fall)
setup (AA[2] => CLKA 01 posedge tch_tasa_rise)
setup (AA[2] => CLKA 10 posedge tch_tasa_fall)
hold (AA[2] => CLKA 01 posedge tch_taha_rise)
hold (AA[2] => CLKA 10 posedge tch_taha_fall)
setup (AA[3] => CLKA 01 posedge tch_tasa_rise)
setup (AA[3] => CLKA 10 posedge tch_tasa_fall)
hold (AA[3] => CLKA 01 posedge tch_taha_rise)
hold (AA[3] => CLKA 10 posedge tch_taha_fall)
setup (AA[4] => CLKA 01 posedge tch_tasa_rise)
setup (AA[4] => CLKA 10 posedge tch_tasa_fall)
hold (AA[4] => CLKA 01 posedge tch_taha_rise)
hold (AA[4] => CLKA 10 posedge tch_taha_fall)
setup (AA[5] => CLKA 01 posedge tch_tasa_rise)
setup (AA[5] => CLKA 10 posedge tch_tasa_fall)
hold (AA[5] => CLKA 01 posedge tch_taha_rise)
hold (AA[5] => CLKA 10 posedge tch_taha_fall)
setup (AA[6] => CLKA 01 posedge tch_tasa_rise)
setup (AA[6] => CLKA 10 posedge tch_tasa_fall)
hold (AA[6] => CLKA 01 posedge tch_taha_rise)
hold (AA[6] => CLKA 10 posedge tch_taha_fall)
setup (AA[7] => CLKA 01 posedge tch_tasa_rise)
setup (AA[7] => CLKA 10 posedge tch_tasa_fall)
hold (AA[7] => CLKA 01 posedge tch_taha_rise)
hold (AA[7] => CLKA 10 posedge tch_taha_fall)
setup (AA[8] => CLKA 01 posedge tch_tasa_rise)
setup (AA[8] => CLKA 10 posedge tch_tasa_fall)
hold (AA[8] => CLKA 01 posedge tch_taha_rise)
hold (AA[8] => CLKA 10 posedge tch_taha_fall)
setup (AB[0] => CLKB 01 posedge tch_tasb_rise)
setup (AB[0] => CLKB 10 posedge tch_tasb_fall)
hold (AB[0] => CLKB 01 posedge tch_tahb_rise)
hold (AB[0] => CLKB 10 posedge tch_tahb_fall)
setup (AB[1] => CLKB 01 posedge tch_tasb_rise)
setup (AB[1] => CLKB 10 posedge tch_tasb_fall)
hold (AB[1] => CLKB 01 posedge tch_tahb_rise)
hold (AB[1] => CLKB 10 posedge tch_tahb_fall)
setup (AB[2] => CLKB 01 posedge tch_tasb_rise)
setup (AB[2] => CLKB 10 posedge tch_tasb_fall)
hold (AB[2] => CLKB 01 posedge tch_tahb_rise)
hold (AB[2] => CLKB 10 posedge tch_tahb_fall)
setup (AB[3] => CLKB 01 posedge tch_tasb_rise)
setup (AB[3] => CLKB 10 posedge tch_tasb_fall)
hold (AB[3] => CLKB 01 posedge tch_tahb_rise)
hold (AB[3] => CLKB 10 posedge tch_tahb_fall)
setup (AB[4] => CLKB 01 posedge tch_tasb_rise)
setup (AB[4] => CLKB 10 posedge tch_tasb_fall)
hold (AB[4] => CLKB 01 posedge tch_tahb_rise)
hold (AB[4] => CLKB 10 posedge tch_tahb_fall)
setup (AB[5] => CLKB 01 posedge tch_tasb_rise)
setup (AB[5] => CLKB 10 posedge tch_tasb_fall)
hold (AB[5] => CLKB 01 posedge tch_tahb_rise)
hold (AB[5] => CLKB 10 posedge tch_tahb_fall)
setup (AB[6] => CLKB 01 posedge tch_tasb_rise)
setup (AB[6] => CLKB 10 posedge tch_tasb_fall)
hold (AB[6] => CLKB 01 posedge tch_tahb_rise)
hold (AB[6] => CLKB 10 posedge tch_tahb_fall)
setup (AB[7] => CLKB 01 posedge tch_tasb_rise)
setup (AB[7] => CLKB 10 posedge tch_tasb_fall)
hold (AB[7] => CLKB 01 posedge tch_tahb_rise)
hold (AB[7] => CLKB 10 posedge tch_tahb_fall)
setup (AB[8] => CLKB 01 posedge tch_tasb_rise)
setup (AB[8] => CLKB 10 posedge tch_tasb_fall)
hold (AB[8] => CLKB 01 posedge tch_tahb_rise)
hold (AB[8] => CLKB 10 posedge tch_tahb_fall)
setup (CENA => CLKA 01 posedge tch_tcsa_rise)
setup (CENA => CLKA 10 posedge tch_tcsa_fall)
hold (CENA => CLKA 01 posedge tch_tcha_rise)
hold (CENA => CLKA 10 posedge tch_tcha_fall)
setup (CENB => CLKB 01 posedge tch_tcsb_rise)
setup (CENB => CLKB 10 posedge tch_tcsb_fall)
hold (CENB => CLKB 01 posedge tch_tchb_rise)
hold (CENB => CLKB 10 posedge tch_tchb_fall)
setup (DB[0] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[0] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[0] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[0] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[1] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[1] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[1] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[1] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[2] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[2] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[2] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[2] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[3] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[3] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[3] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[3] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[4] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[4] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[4] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[4] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[5] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[5] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[5] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[5] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[6] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[6] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[6] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[6] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[7] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[7] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[7] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[7] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[8] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[8] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[8] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[8] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[9] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[9] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[9] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[9] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[10] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[10] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[10] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[10] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[11] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[11] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[11] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[11] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[12] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[12] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[12] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[12] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[13] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[13] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[13] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[13] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[14] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[14] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[14] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[14] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[15] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[15] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[15] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[15] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[16] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[16] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[16] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[16] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[17] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[17] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[17] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[17] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[18] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[18] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[18] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[18] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[19] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[19] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[19] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[19] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[20] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[20] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[20] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[20] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[21] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[21] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[21] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[21] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[22] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[22] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[22] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[22] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[23] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[23] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[23] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[23] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[24] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[24] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[24] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[24] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[25] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[25] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[25] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[25] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[26] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[26] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[26] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[26] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[27] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[27] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[27] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[27] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[28] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[28] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[28] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[28] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[29] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[29] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[29] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[29] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[30] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[30] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[30] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[30] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[31] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[31] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[31] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[31] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[32] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[32] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[32] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[32] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[33] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[33] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[33] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[33] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[34] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[34] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[34] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[34] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[35] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[35] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[35] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[35] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[36] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[36] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[36] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[36] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[37] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[37] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[37] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[37] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[38] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[38] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[38] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[38] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[39] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[39] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[39] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[39] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[40] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[40] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[40] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[40] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[41] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[41] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[41] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[41] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[42] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[42] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[42] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[42] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[43] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[43] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[43] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[43] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[44] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[44] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[44] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[44] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[45] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[45] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[45] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[45] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[46] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[46] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[46] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[46] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[47] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[47] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[47] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[47] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[48] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[48] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[48] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[48] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[49] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[49] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[49] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[49] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[50] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[50] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[50] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[50] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[51] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[51] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[51] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[51] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[52] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[52] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[52] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[52] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[53] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[53] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[53] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[53] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[54] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[54] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[54] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[54] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[55] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[55] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[55] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[55] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[56] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[56] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[56] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[56] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[57] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[57] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[57] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[57] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[58] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[58] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[58] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[58] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[59] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[59] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[59] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[59] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[60] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[60] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[60] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[60] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[61] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[61] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[61] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[61] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[62] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[62] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[62] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[62] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[63] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[63] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[63] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[63] => CLKB 10 posedge tch_tdhb_fall)
period (CLKA 01 period_tcyca)
mpwl (CLKA tpw_tckla)
mpwh (CLKA tpw_tckha)
period (CLKB 01 period_tcycb)
mpwl (CLKB tpw_tcklb)
mpwh (CLKB tpw_tckhb)
setup (CLKA => CLKB 01 posEdge tch_tcc)
setup (CLKB => CLKA 01 posEdge tch_tcc)
path (CLKA => QA[0] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[0] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[1] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[1] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[2] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[2] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[3] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[3] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[4] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[4] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[5] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[5] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[6] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[6] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[7] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[7] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[8] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[8] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[9] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[9] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[10] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[10] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[11] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[11] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[12] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[12] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[13] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[13] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[14] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[14] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[15] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[15] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[16] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[16] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[17] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[17] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[18] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[18] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[19] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[19] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[20] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[20] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[21] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[21] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[22] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[22] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[23] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[23] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[24] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[24] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[25] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[25] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[26] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[26] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[27] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[27] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[28] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[28] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[29] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[29] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[30] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[30] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[31] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[31] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[32] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[32] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[33] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[33] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[34] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[34] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[35] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[35] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[36] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[36] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[37] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[37] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[38] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[38] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[39] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[39] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[40] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[40] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[41] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[41] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[42] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[42] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[43] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[43] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[44] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[44] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[45] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[45] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[46] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[46] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[47] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[47] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[48] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[48] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[49] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[49] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[50] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[50] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[51] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[51] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[52] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[52] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[53] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[53] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[54] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[54] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[55] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[55] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[56] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[56] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[57] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[57] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[58] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[58] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[59] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[59] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[60] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[60] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[61] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[61] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[62] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[62] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[63] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[63] 01 10 delay(dly_taaf) slew(sl_qaf))
)
