/*
 *      CONFIDENTIAL AND PROPRIETARY SOFTWARE/DATA OF ARTISAN COMPONENTS, INC.
 *      
 *      Copyright (c) 2019 Artisan Components, Inc.  All Rights Reserved.
 *      
 *      Use of this Software/Data is subject to the terms and conditions of
 *      the applicable license agreement between Artisan Components, Inc. and
 *      Taiwan Semiconductor Manufacturing Company Ltd..  In addition, this Software/Data
 *      is protected by copyright law and international treaties.
 *      
 *      The copyright notice(s) in this Software/Data does not indicate actual
 *      or intended publication of this Software/Data.
 *      name:			RF-2P-HS Register File Generator
 *           			TSMC CL018G Process
 *      version:		2003Q2V2
 *      comment:		
 *      configuration:	 -instname "rf2p_512x64_4_50" -words 512 -bits 64 -frequency 50 -ring_width 10 -mux 4 -drive 3 -write_mask off -wp_size 8 -top_layer met6 -power_type rings -horiz met3 -vert met2 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND
 *
 *      Synopsys model for Synchronous Dual-Port Register File
 *
 *      Library Name:   aci
 *      Instance Name:  rf2p_512x64_4_50
 *      Words:          512
 *      Word Width:     64
 *      Mux:            4
 *      Pipeline:       No
 *      Process:        slow
 *      Delays:		max
 *
 *      Creation Date:  2019-02-18 16:41:54Z
 *      Version:        2003Q2V2
 *
 *      Verified With: Synopsys Primetime
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.
 *          Different modes are defined in order to disable false path
 *          during the specific mode activation when doing static timing analysis. 
 *
 *
 *      Modeling Limitations: This stamp does not include power information.
 *          Due to limitations of the stamp modeling, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

MODELDATA
OPERATING_CONDITION "slow";
DESIGN              "rf2p_512x64_4_50";

CELLDATA
area                   : 518034.639;
default_max_transition : 4.000;
ENDCELLDATA

PORTDATA
QA[63:0] : MAXCAP(1.250);
AA[8:0] : CAP(0.050);
AB[8:0] : CAP(0.050);
CENA : CAP(0.004);
CENB : CAP(0.003);
CLKA : CAP(0.089), MAXTRANS(4.000);
CLKB : CAP(0.094), MAXTRANS(4.000);
DB[63:0] : CAP(0.003);
ENDPORTDATA

TIMINGDATA
GLOBAL
        lu_table_template(rf2p_512x64_4_50_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(rf2p_512x64_4_50_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(rf2p_512x64_4_50_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
ENDGLOBAL

ARCDATA
tch_tasa:
			rise_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.836, 0.843, 0.866, 0.914, 0.993, 1.229, 1.466", \
			  "0.832, 0.839, 0.862, 0.910, 0.989, 1.225, 1.462", \
			  "0.817, 0.824, 0.847, 0.895, 0.973, 1.210, 1.447", \
			  "0.787, 0.794, 0.817, 0.865, 0.943, 1.180, 1.417", \
			  "0.737, 0.744, 0.767, 0.815, 0.893, 1.130, 1.366", \
			  "0.587, 0.593, 0.617, 0.664, 0.743, 0.980, 1.216", \
			  "0.437, 0.443, 0.467, 0.514, 0.593, 0.830, 1.066" \
			)
			}
			fall_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.836, 0.843, 0.866, 0.914, 0.993, 1.229, 1.466", \
			  "0.832, 0.839, 0.862, 0.910, 0.989, 1.225, 1.462", \
			  "0.817, 0.824, 0.847, 0.895, 0.973, 1.210, 1.447", \
			  "0.787, 0.794, 0.817, 0.865, 0.943, 1.180, 1.417", \
			  "0.737, 0.744, 0.767, 0.815, 0.893, 1.130, 1.366", \
			  "0.587, 0.593, 0.617, 0.664, 0.743, 0.980, 1.216", \
			  "0.437, 0.443, 0.467, 0.514, 0.593, 0.830, 1.066" \
			)
			}
ENDARCDATA

ARCDATA
tch_taha:
			rise_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.074, 0.068, 0.044, 0.000, 0.000, 0.000, 0.000", \
			  "0.074, 0.068, 0.044, 0.000, 0.000, 0.000, 0.000", \
			  "0.074, 0.068, 0.044, 0.000, 0.000, 0.000, 0.000", \
			  "0.074, 0.068, 0.044, 0.011, 0.000, 0.000, 0.000", \
			  "0.102, 0.099, 0.086, 0.061, 0.018, 0.000, 0.000", \
			  "0.252, 0.249, 0.236, 0.211, 0.169, 0.042, 0.000", \
			  "0.403, 0.399, 0.386, 0.361, 0.319, 0.192, 0.066" \
			)
			}
			fall_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.074, 0.068, 0.044, 0.000, 0.000, 0.000, 0.000", \
			  "0.074, 0.068, 0.044, 0.000, 0.000, 0.000, 0.000", \
			  "0.074, 0.068, 0.044, 0.000, 0.000, 0.000, 0.000", \
			  "0.074, 0.068, 0.044, 0.011, 0.000, 0.000, 0.000", \
			  "0.102, 0.099, 0.086, 0.061, 0.018, 0.000, 0.000", \
			  "0.252, 0.249, 0.236, 0.211, 0.169, 0.042, 0.000", \
			  "0.403, 0.399, 0.386, 0.361, 0.319, 0.192, 0.066" \
			)
			}
ENDARCDATA

ARCDATA
tch_tasb:
			rise_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.812, 0.819, 0.842, 0.890, 0.969, 1.205, 1.442", \
			  "0.808, 0.815, 0.838, 0.886, 0.965, 1.201, 1.438", \
			  "0.793, 0.800, 0.823, 0.871, 0.950, 1.186, 1.423", \
			  "0.763, 0.770, 0.793, 0.841, 0.920, 1.156, 1.393", \
			  "0.713, 0.720, 0.743, 0.791, 0.869, 1.106, 1.343", \
			  "0.563, 0.569, 0.593, 0.640, 0.719, 0.956, 1.192", \
			  "0.413, 0.419, 0.443, 0.490, 0.569, 0.806, 1.042" \
			)
			}
			fall_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.812, 0.819, 0.842, 0.890, 0.969, 1.205, 1.442", \
			  "0.808, 0.815, 0.838, 0.886, 0.965, 1.201, 1.438", \
			  "0.793, 0.800, 0.823, 0.871, 0.950, 1.186, 1.423", \
			  "0.763, 0.770, 0.793, 0.841, 0.920, 1.156, 1.393", \
			  "0.713, 0.720, 0.743, 0.791, 0.869, 1.106, 1.343", \
			  "0.563, 0.569, 0.593, 0.640, 0.719, 0.956, 1.192", \
			  "0.413, 0.419, 0.443, 0.490, 0.569, 0.806, 1.042" \
			)
			}
ENDARCDATA

ARCDATA
tch_tahb:
			rise_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.082, 0.075, 0.052, 0.004, 0.000, 0.000, 0.000", \
			  "0.082, 0.075, 0.052, 0.004, 0.000, 0.000, 0.000", \
			  "0.082, 0.075, 0.052, 0.004, 0.000, 0.000, 0.000", \
			  "0.082, 0.075, 0.052, 0.015, 0.000, 0.000, 0.000", \
			  "0.106, 0.103, 0.090, 0.065, 0.022, 0.000, 0.000", \
			  "0.256, 0.253, 0.240, 0.215, 0.173, 0.046, 0.000", \
			  "0.406, 0.403, 0.390, 0.365, 0.323, 0.196, 0.069" \
			)
			}
			fall_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.082, 0.075, 0.052, 0.004, 0.000, 0.000, 0.000", \
			  "0.082, 0.075, 0.052, 0.004, 0.000, 0.000, 0.000", \
			  "0.082, 0.075, 0.052, 0.004, 0.000, 0.000, 0.000", \
			  "0.082, 0.075, 0.052, 0.015, 0.000, 0.000, 0.000", \
			  "0.106, 0.103, 0.090, 0.065, 0.022, 0.000, 0.000", \
			  "0.256, 0.253, 0.240, 0.215, 0.173, 0.046, 0.000", \
			  "0.406, 0.403, 0.390, 0.365, 0.323, 0.196, 0.069" \
			)
			}
ENDARCDATA

ARCDATA
tch_tcsa:
			rise_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.712, 0.718, 0.740, 0.785, 0.860, 1.085, 1.309", \
			  "0.708, 0.714, 0.736, 0.781, 0.856, 1.081, 1.305", \
			  "0.692, 0.698, 0.721, 0.766, 0.841, 1.066, 1.290", \
			  "0.662, 0.668, 0.691, 0.736, 0.811, 1.036, 1.260", \
			  "0.612, 0.618, 0.641, 0.686, 0.761, 0.986, 1.210", \
			  "0.462, 0.468, 0.491, 0.536, 0.611, 0.835, 1.060", \
			  "0.312, 0.318, 0.340, 0.385, 0.460, 0.685, 0.910" \
			)
			}
			fall_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.712, 0.718, 0.740, 0.785, 0.860, 1.085, 1.309", \
			  "0.708, 0.714, 0.736, 0.781, 0.856, 1.081, 1.305", \
			  "0.692, 0.698, 0.721, 0.766, 0.841, 1.066, 1.290", \
			  "0.662, 0.668, 0.691, 0.736, 0.811, 1.036, 1.260", \
			  "0.612, 0.618, 0.641, 0.686, 0.761, 0.986, 1.210", \
			  "0.462, 0.468, 0.491, 0.536, 0.611, 0.835, 1.060", \
			  "0.312, 0.318, 0.340, 0.385, 0.460, 0.685, 0.910" \
			)
			}
ENDARCDATA

ARCDATA
tch_tcha:
			rise_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.102, 0.096, 0.080, 0.054, 0.011, 0.000, 0.000", \
			  "0.252, 0.246, 0.230, 0.205, 0.162, 0.033, 0.000" \
			)
			}
			fall_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.102, 0.096, 0.080, 0.054, 0.011, 0.000, 0.000", \
			  "0.252, 0.246, 0.230, 0.205, 0.162, 0.033, 0.000" \
			)
			}
ENDARCDATA

ARCDATA
tch_tcsb:
			rise_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.673, 0.679, 0.701, 0.746, 0.821, 1.046, 1.271", \
			  "0.669, 0.675, 0.697, 0.742, 0.817, 1.042, 1.267", \
			  "0.654, 0.660, 0.682, 0.727, 0.802, 1.027, 1.252", \
			  "0.624, 0.630, 0.652, 0.697, 0.772, 0.997, 1.222", \
			  "0.574, 0.580, 0.602, 0.647, 0.722, 0.947, 1.172", \
			  "0.424, 0.430, 0.452, 0.497, 0.572, 0.797, 1.022", \
			  "0.273, 0.279, 0.302, 0.347, 0.422, 0.647, 0.871" \
			)
			}
			fall_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.673, 0.679, 0.701, 0.746, 0.821, 1.046, 1.271", \
			  "0.669, 0.675, 0.697, 0.742, 0.817, 1.042, 1.267", \
			  "0.654, 0.660, 0.682, 0.727, 0.802, 1.027, 1.252", \
			  "0.624, 0.630, 0.652, 0.697, 0.772, 0.997, 1.222", \
			  "0.574, 0.580, 0.602, 0.647, 0.722, 0.947, 1.172", \
			  "0.424, 0.430, 0.452, 0.497, 0.572, 0.797, 1.022", \
			  "0.273, 0.279, 0.302, 0.347, 0.422, 0.647, 0.871" \
			)
			}
ENDARCDATA

ARCDATA
tch_tchb:
			rise_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.106, 0.100, 0.084, 0.058, 0.015, 0.000, 0.000", \
			  "0.256, 0.250, 0.234, 0.208, 0.165, 0.036, 0.000" \
			)
			}
			fall_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.106, 0.100, 0.084, 0.058, 0.015, 0.000, 0.000", \
			  "0.256, 0.250, 0.234, 0.208, 0.165, 0.036, 0.000" \
			)
			}
ENDARCDATA
ARCDATA
tch_tdsb:
			rise_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.023, 0.028, 0.047, 0.085, 0.149, 0.340, 0.532", \
			  "0.019, 0.024, 0.043, 0.081, 0.145, 0.336, 0.528", \
			  "0.004, 0.009, 0.028, 0.066, 0.130, 0.321, 0.513", \
			  "0.000, 0.000, 0.000, 0.036, 0.100, 0.291, 0.483", \
			  "0.000, 0.000, 0.000, 0.000, 0.050, 0.241, 0.432", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.091, 0.282", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.132" \
			)
			}
			fall_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.023, 0.028, 0.047, 0.085, 0.149, 0.340, 0.532", \
			  "0.019, 0.024, 0.043, 0.081, 0.145, 0.336, 0.528", \
			  "0.004, 0.009, 0.028, 0.066, 0.130, 0.321, 0.513", \
			  "0.000, 0.000, 0.000, 0.036, 0.100, 0.291, 0.483", \
			  "0.000, 0.000, 0.000, 0.000, 0.050, 0.241, 0.432", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.091, 0.282", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.132" \
			)
			}
ENDARCDATA

ARCDATA
tch_tdhb:
			rise_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.290, 0.287, 0.275, 0.252, 0.213, 0.098, 0.000", \
			  "0.294, 0.291, 0.279, 0.256, 0.217, 0.102, 0.000", \
			  "0.309, 0.306, 0.294, 0.271, 0.232, 0.117, 0.001", \
			  "0.339, 0.336, 0.324, 0.301, 0.262, 0.147, 0.031", \
			  "0.389, 0.386, 0.374, 0.351, 0.313, 0.197, 0.081", \
			  "0.539, 0.536, 0.524, 0.501, 0.463, 0.347, 0.232", \
			  "0.689, 0.686, 0.675, 0.651, 0.613, 0.497, 0.382" \
			)
			}
			fall_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.290, 0.287, 0.275, 0.252, 0.213, 0.098, 0.000", \
			  "0.294, 0.291, 0.279, 0.256, 0.217, 0.102, 0.000", \
			  "0.309, 0.306, 0.294, 0.271, 0.232, 0.117, 0.001", \
			  "0.339, 0.336, 0.324, 0.301, 0.262, 0.147, 0.031", \
			  "0.389, 0.386, 0.374, 0.351, 0.313, 0.197, 0.081", \
			  "0.539, 0.536, 0.524, 0.501, 0.463, 0.347, 0.232", \
			  "0.689, 0.686, 0.675, 0.651, 0.613, 0.497, 0.382" \
			)
			}
ENDARCDATA


ARCDATA
period_tcyca:
			rise_constraint(scalar) {
				values ("3.759")
			}
			fall_constraint(scalar) {
				values ("3.759")
			}
ENDARCDATA

ARCDATA
tpw_tckla:
			rise_constraint(scalar) {
				values ("0.448")
			}
			fall_constraint(scalar) {
				values ("0.448")
			}
ENDARCDATA

ARCDATA
tpw_tckha:
			rise_constraint(scalar) {
				values ("0.250")
			}
			fall_constraint(scalar) {
				values ("0.250")
			}
ENDARCDATA

ARCDATA
period_tcycb:
			rise_constraint(scalar) {
				values ("3.379")
			}
			fall_constraint(scalar) {
				values ("3.379")
			}
ENDARCDATA

ARCDATA
tpw_tcklb:
			rise_constraint(scalar) {
				values ("0.377")
			}
			fall_constraint(scalar) {
				values ("0.377")
			}
ENDARCDATA

ARCDATA
tpw_tckhb:
			rise_constraint(scalar) {
				values ("0.236")
			}
			fall_constraint(scalar) {
				values ("0.236")
			}
ENDARCDATA

ARCDATA
tch_tccA:
			rise_constraint(scalar) {
				values ("1.809")
			}
ENDARCDATA

ARCDATA
tch_tccB:
			rise_constraint(scalar) {
				values ("1.809")
			}
ENDARCDATA
ARCDATA
dly_tya:
			cell_rise(rf2p_512x64_4_50_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.000, 0.015, 0.062, 0.155, 0.311, 0.777, 1.250");
			values ( \
			  "2.684, 2.708, 2.781, 2.925, 3.168, 3.893, 4.628", \
			  "2.688, 2.712, 2.785, 2.929, 3.172, 3.897, 4.632", \
			  "2.703, 2.727, 2.800, 2.944, 3.187, 3.912, 4.647", \
			  "2.733, 2.757, 2.830, 2.974, 3.217, 3.942, 4.677", \
			  "2.783, 2.807, 2.880, 3.024, 3.267, 3.992, 4.728", \
			  "2.934, 2.957, 3.030, 3.175, 3.417, 4.142, 4.878", \
			  "3.084, 3.107, 3.180, 3.325, 3.567, 4.292, 5.028" \
			)
			}
			rise_transition(rf2p_512x64_4_50_load_template) {
			index_1 ("0.000, 0.015, 0.062, 0.155, 0.311, 0.777, 1.250");
			values ("0.095, 0.143, 0.294, 0.591, 1.090, 2.581, 4.094")
			}
			cell_fall(rf2p_512x64_4_50_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.000, 0.015, 0.062, 0.155, 0.311, 0.777, 1.250");
			values ( \
			  "2.763, 2.783, 2.847, 2.971, 3.181, 3.806, 4.442", \
			  "2.767, 2.787, 2.851, 2.975, 3.185, 3.810, 4.446", \
			  "2.782, 2.802, 2.866, 2.990, 3.200, 3.825, 4.461", \
			  "2.812, 2.832, 2.896, 3.020, 3.230, 3.856, 4.491", \
			  "2.862, 2.883, 2.946, 3.071, 3.280, 3.906, 4.541", \
			  "3.013, 3.033, 3.096, 3.221, 3.430, 4.056, 4.691", \
			  "3.163, 3.183, 3.246, 3.371, 3.580, 4.206, 4.841" \
			)
			}
			fall_transition(rf2p_512x64_4_50_load_template) {
			index_1 ("0.000, 0.015, 0.062, 0.155, 0.311, 0.777, 1.250");
			values ("0.158, 0.194, 0.307, 0.531, 0.905, 2.025, 3.162")
			}
ENDARCDATA
ENDTIMINGDATA
ENDMODELDATA
