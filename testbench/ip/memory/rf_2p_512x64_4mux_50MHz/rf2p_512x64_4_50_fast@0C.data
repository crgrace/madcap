/*
 *      CONFIDENTIAL AND PROPRIETARY SOFTWARE/DATA OF ARTISAN COMPONENTS, INC.
 *      
 *      Copyright (c) 2019 Artisan Components, Inc.  All Rights Reserved.
 *      
 *      Use of this Software/Data is subject to the terms and conditions of
 *      the applicable license agreement between Artisan Components, Inc. and
 *      Taiwan Semiconductor Manufacturing Company Ltd..  In addition, this Software/Data
 *      is protected by copyright law and international treaties.
 *      
 *      The copyright notice(s) in this Software/Data does not indicate actual
 *      or intended publication of this Software/Data.
 *      name:			RF-2P-HS Register File Generator
 *           			TSMC CL018G Process
 *      version:		2003Q2V2
 *      comment:		
 *      configuration:	 -instname "rf2p_512x64_4_50" -words 512 -bits 64 -frequency 50 -ring_width 10 -mux 4 -drive 3 -write_mask off -wp_size 8 -top_layer met6 -power_type rings -horiz met3 -vert met2 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND
 *
 *      Synopsys model for Synchronous Dual-Port Register File
 *
 *      Library Name:   aci
 *      Instance Name:  rf2p_512x64_4_50
 *      Words:          512
 *      Word Width:     64
 *      Mux:            4
 *      Pipeline:       No
 *      Process:        fast
 *      Delays:		min
 *
 *      Creation Date:  2019-02-18 16:41:52Z
 *      Version:        2003Q2V2
 *
 *      Verified With: Synopsys Primetime
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.
 *          Different modes are defined in order to disable false path
 *          during the specific mode activation when doing static timing analysis. 
 *
 *
 *      Modeling Limitations: This stamp does not include power information.
 *          Due to limitations of the stamp modeling, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

MODELDATA
OPERATING_CONDITION "fast";
DESIGN              "rf2p_512x64_4_50";

CELLDATA
area                   : 518034.639;
default_max_transition : 2.100;
ENDCELLDATA

PORTDATA
QA[63:0] : MAXCAP(1.250);
AA[8:0] : CAP(0.052);
AB[8:0] : CAP(0.052);
CENA : CAP(0.004);
CENB : CAP(0.003);
CLKA : CAP(0.094), MAXTRANS(2.100);
CLKB : CAP(0.098), MAXTRANS(2.100);
DB[63:0] : CAP(0.003);
ENDPORTDATA

TIMINGDATA
GLOBAL
        lu_table_template(rf2p_512x64_4_50_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(rf2p_512x64_4_50_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(rf2p_512x64_4_50_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
ENDGLOBAL

ARCDATA
tch_tasa:
			rise_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.255, 0.257, 0.266, 0.284, 0.314, 0.345, 0.381", \
			  "0.254, 0.257, 0.266, 0.284, 0.314, 0.344, 0.380", \
			  "0.252, 0.255, 0.264, 0.282, 0.312, 0.342, 0.378", \
			  "0.249, 0.251, 0.260, 0.278, 0.308, 0.338, 0.374", \
			  "0.242, 0.244, 0.253, 0.271, 0.301, 0.332, 0.368", \
			  "0.235, 0.238, 0.247, 0.265, 0.295, 0.325, 0.361", \
			  "0.228, 0.230, 0.239, 0.257, 0.287, 0.317, 0.353" \
			)
			}
			fall_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.255, 0.257, 0.266, 0.284, 0.314, 0.345, 0.381", \
			  "0.254, 0.257, 0.266, 0.284, 0.314, 0.344, 0.380", \
			  "0.252, 0.255, 0.264, 0.282, 0.312, 0.342, 0.378", \
			  "0.249, 0.251, 0.260, 0.278, 0.308, 0.338, 0.374", \
			  "0.242, 0.244, 0.253, 0.271, 0.301, 0.332, 0.368", \
			  "0.235, 0.238, 0.247, 0.265, 0.295, 0.325, 0.361", \
			  "0.228, 0.230, 0.239, 0.257, 0.287, 0.317, 0.353" \
			)
			}
ENDARCDATA

ARCDATA
tch_taha:
			rise_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.021, 0.019, 0.010, 0.000, 0.000, 0.000, 0.000", \
			  "0.021, 0.019, 0.010, 0.000, 0.000, 0.000, 0.000", \
			  "0.021, 0.019, 0.010, 0.000, 0.000, 0.000, 0.000", \
			  "0.021, 0.019, 0.010, 0.000, 0.000, 0.000, 0.000", \
			  "0.021, 0.019, 0.010, 0.000, 0.000, 0.000, 0.000", \
			  "0.024, 0.021, 0.010, 0.000, 0.000, 0.000, 0.000", \
			  "0.032, 0.029, 0.017, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.021, 0.019, 0.010, 0.000, 0.000, 0.000, 0.000", \
			  "0.021, 0.019, 0.010, 0.000, 0.000, 0.000, 0.000", \
			  "0.021, 0.019, 0.010, 0.000, 0.000, 0.000, 0.000", \
			  "0.021, 0.019, 0.010, 0.000, 0.000, 0.000, 0.000", \
			  "0.021, 0.019, 0.010, 0.000, 0.000, 0.000, 0.000", \
			  "0.024, 0.021, 0.010, 0.000, 0.000, 0.000, 0.000", \
			  "0.032, 0.029, 0.017, 0.000, 0.000, 0.000, 0.000" \
			)
			}
ENDARCDATA

ARCDATA
tch_tasb:
			rise_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.239, 0.242, 0.251, 0.269, 0.299, 0.329, 0.365", \
			  "0.239, 0.241, 0.250, 0.268, 0.298, 0.328, 0.364", \
			  "0.237, 0.239, 0.248, 0.266, 0.296, 0.326, 0.362", \
			  "0.233, 0.235, 0.244, 0.262, 0.292, 0.322, 0.358", \
			  "0.226, 0.229, 0.238, 0.256, 0.286, 0.316, 0.352", \
			  "0.220, 0.222, 0.231, 0.249, 0.279, 0.309, 0.345", \
			  "0.212, 0.214, 0.223, 0.241, 0.271, 0.301, 0.337" \
			)
			}
			fall_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.239, 0.242, 0.251, 0.269, 0.299, 0.329, 0.365", \
			  "0.239, 0.241, 0.250, 0.268, 0.298, 0.328, 0.364", \
			  "0.237, 0.239, 0.248, 0.266, 0.296, 0.326, 0.362", \
			  "0.233, 0.235, 0.244, 0.262, 0.292, 0.322, 0.358", \
			  "0.226, 0.229, 0.238, 0.256, 0.286, 0.316, 0.352", \
			  "0.220, 0.222, 0.231, 0.249, 0.279, 0.309, 0.345", \
			  "0.212, 0.214, 0.223, 0.241, 0.271, 0.301, 0.337" \
			)
			}
ENDARCDATA

ARCDATA
tch_tahb:
			rise_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.023, 0.021, 0.011, 0.000, 0.000, 0.000, 0.000", \
			  "0.023, 0.021, 0.011, 0.000, 0.000, 0.000, 0.000", \
			  "0.023, 0.021, 0.011, 0.000, 0.000, 0.000, 0.000", \
			  "0.023, 0.021, 0.011, 0.000, 0.000, 0.000, 0.000", \
			  "0.023, 0.021, 0.011, 0.000, 0.000, 0.000, 0.000", \
			  "0.025, 0.022, 0.011, 0.000, 0.000, 0.000, 0.000", \
			  "0.033, 0.030, 0.019, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.023, 0.021, 0.011, 0.000, 0.000, 0.000, 0.000", \
			  "0.023, 0.021, 0.011, 0.000, 0.000, 0.000, 0.000", \
			  "0.023, 0.021, 0.011, 0.000, 0.000, 0.000, 0.000", \
			  "0.023, 0.021, 0.011, 0.000, 0.000, 0.000, 0.000", \
			  "0.023, 0.021, 0.011, 0.000, 0.000, 0.000, 0.000", \
			  "0.025, 0.022, 0.011, 0.000, 0.000, 0.000, 0.000", \
			  "0.033, 0.030, 0.019, 0.000, 0.000, 0.000, 0.000" \
			)
			}
ENDARCDATA

ARCDATA
tch_tcsa:
			rise_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.275, 0.281, 0.305, 0.353, 0.434, 0.514, 0.610", \
			  "0.274, 0.281, 0.305, 0.353, 0.433, 0.513, 0.609", \
			  "0.272, 0.279, 0.303, 0.351, 0.431, 0.511, 0.607", \
			  "0.269, 0.275, 0.299, 0.347, 0.427, 0.507, 0.603", \
			  "0.262, 0.268, 0.292, 0.340, 0.421, 0.501, 0.597", \
			  "0.255, 0.262, 0.286, 0.334, 0.414, 0.494, 0.590", \
			  "0.248, 0.254, 0.278, 0.326, 0.406, 0.486, 0.582" \
			)
			}
			fall_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.275, 0.281, 0.305, 0.353, 0.434, 0.514, 0.610", \
			  "0.274, 0.281, 0.305, 0.353, 0.433, 0.513, 0.609", \
			  "0.272, 0.279, 0.303, 0.351, 0.431, 0.511, 0.607", \
			  "0.269, 0.275, 0.299, 0.347, 0.427, 0.507, 0.603", \
			  "0.262, 0.268, 0.292, 0.340, 0.421, 0.501, 0.597", \
			  "0.255, 0.262, 0.286, 0.334, 0.414, 0.494, 0.590", \
			  "0.248, 0.254, 0.278, 0.326, 0.406, 0.486, 0.582" \
			)
			}
ENDARCDATA

ARCDATA
tch_tcha:
			rise_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.002", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.010" \
			)
			}
			fall_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.002", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.010" \
			)
			}
ENDARCDATA

ARCDATA
tch_tcsb:
			rise_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.265, 0.272, 0.296, 0.344, 0.424, 0.504, 0.600", \
			  "0.265, 0.271, 0.295, 0.343, 0.423, 0.503, 0.599", \
			  "0.263, 0.269, 0.293, 0.341, 0.421, 0.501, 0.597", \
			  "0.259, 0.265, 0.289, 0.337, 0.417, 0.497, 0.594", \
			  "0.252, 0.259, 0.283, 0.331, 0.411, 0.491, 0.587", \
			  "0.246, 0.252, 0.276, 0.324, 0.404, 0.484, 0.580", \
			  "0.238, 0.244, 0.268, 0.316, 0.396, 0.476, 0.573" \
			)
			}
			fall_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.265, 0.272, 0.296, 0.344, 0.424, 0.504, 0.600", \
			  "0.265, 0.271, 0.295, 0.343, 0.423, 0.503, 0.599", \
			  "0.263, 0.269, 0.293, 0.341, 0.421, 0.501, 0.597", \
			  "0.259, 0.265, 0.289, 0.337, 0.417, 0.497, 0.594", \
			  "0.252, 0.259, 0.283, 0.331, 0.411, 0.491, 0.587", \
			  "0.246, 0.252, 0.276, 0.324, 0.404, 0.484, 0.580", \
			  "0.238, 0.244, 0.268, 0.316, 0.396, 0.476, 0.573" \
			)
			}
ENDARCDATA

ARCDATA
tch_tchb:
			rise_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.002", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.010" \
			)
			}
			fall_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.002", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.010" \
			)
			}
ENDARCDATA
ARCDATA
tch_tdsb:
			rise_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.000, 0.000, 0.000, 0.034, 0.105, 0.175, 0.260", \
			  "0.000, 0.000, 0.000, 0.034, 0.104, 0.175, 0.259", \
			  "0.000, 0.000, 0.000, 0.032, 0.102, 0.173, 0.257", \
			  "0.000, 0.000, 0.000, 0.028, 0.098, 0.169, 0.253", \
			  "0.000, 0.000, 0.000, 0.021, 0.092, 0.162, 0.247", \
			  "0.000, 0.000, 0.000, 0.014, 0.085, 0.155, 0.240", \
			  "0.000, 0.000, 0.000, 0.007, 0.077, 0.148, 0.232" \
			)
			}
			fall_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.000, 0.000, 0.000, 0.034, 0.105, 0.175, 0.260", \
			  "0.000, 0.000, 0.000, 0.034, 0.104, 0.175, 0.259", \
			  "0.000, 0.000, 0.000, 0.032, 0.102, 0.173, 0.257", \
			  "0.000, 0.000, 0.000, 0.028, 0.098, 0.169, 0.253", \
			  "0.000, 0.000, 0.000, 0.021, 0.092, 0.162, 0.247", \
			  "0.000, 0.000, 0.000, 0.014, 0.085, 0.155, 0.240", \
			  "0.000, 0.000, 0.000, 0.007, 0.077, 0.148, 0.232" \
			)
			}
ENDARCDATA

ARCDATA
tch_tdhb:
			rise_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.125, 0.119, 0.106, 0.115, 0.129, 0.144, 0.162", \
			  "0.125, 0.120, 0.106, 0.115, 0.130, 0.145, 0.162", \
			  "0.127, 0.122, 0.108, 0.117, 0.132, 0.147, 0.164", \
			  "0.131, 0.126, 0.112, 0.121, 0.136, 0.151, 0.168", \
			  "0.138, 0.132, 0.119, 0.128, 0.142, 0.157, 0.175", \
			  "0.144, 0.139, 0.126, 0.134, 0.149, 0.164, 0.181", \
			  "0.152, 0.147, 0.133, 0.142, 0.157, 0.172, 0.189" \
			)
			}
			fall_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.125, 0.119, 0.106, 0.115, 0.129, 0.144, 0.162", \
			  "0.125, 0.120, 0.106, 0.115, 0.130, 0.145, 0.162", \
			  "0.127, 0.122, 0.108, 0.117, 0.132, 0.147, 0.164", \
			  "0.131, 0.126, 0.112, 0.121, 0.136, 0.151, 0.168", \
			  "0.138, 0.132, 0.119, 0.128, 0.142, 0.157, 0.175", \
			  "0.144, 0.139, 0.126, 0.134, 0.149, 0.164, 0.181", \
			  "0.152, 0.147, 0.133, 0.142, 0.157, 0.172, 0.189" \
			)
			}
ENDARCDATA


ARCDATA
period_tcyca:
			rise_constraint(scalar) {
				values ("1.640")
			}
			fall_constraint(scalar) {
				values ("1.640")
			}
ENDARCDATA

ARCDATA
tpw_tckla:
			rise_constraint(scalar) {
				values ("0.161")
			}
			fall_constraint(scalar) {
				values ("0.161")
			}
ENDARCDATA

ARCDATA
tpw_tckha:
			rise_constraint(scalar) {
				values ("0.110")
			}
			fall_constraint(scalar) {
				values ("0.110")
			}
ENDARCDATA

ARCDATA
period_tcycb:
			rise_constraint(scalar) {
				values ("1.613")
			}
			fall_constraint(scalar) {
				values ("1.613")
			}
ENDARCDATA

ARCDATA
tpw_tcklb:
			rise_constraint(scalar) {
				values ("0.140")
			}
			fall_constraint(scalar) {
				values ("0.140")
			}
ENDARCDATA

ARCDATA
tpw_tckhb:
			rise_constraint(scalar) {
				values ("0.104")
			}
			fall_constraint(scalar) {
				values ("0.104")
			}
ENDARCDATA

ARCDATA
tch_tccA:
			rise_constraint(scalar) {
				values ("0.783")
			}
ENDARCDATA

ARCDATA
tch_tccB:
			rise_constraint(scalar) {
				values ("0.783")
			}
ENDARCDATA
ARCDATA
dly_tya:
			cell_rise(rf2p_512x64_4_50_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.000, 0.015, 0.062, 0.155, 0.311, 0.777, 1.250");
			values ( \
			  "1.196, 1.206, 1.237, 1.300, 1.409, 1.776, 2.147", \
			  "1.196, 1.206, 1.238, 1.300, 1.410, 1.776, 2.148", \
			  "1.198, 1.208, 1.240, 1.302, 1.412, 1.778, 2.150", \
			  "1.202, 1.212, 1.244, 1.306, 1.416, 1.782, 2.154", \
			  "1.209, 1.219, 1.250, 1.313, 1.422, 1.789, 2.160", \
			  "1.215, 1.225, 1.257, 1.319, 1.429, 1.795, 2.167", \
			  "1.223, 1.233, 1.265, 1.327, 1.437, 1.803, 2.175" \
			)
			}
			rise_transition(rf2p_512x64_4_50_load_template) {
			index_1 ("0.000, 0.015, 0.062, 0.155, 0.311, 0.777, 1.250");
			values ("0.038, 0.063, 0.141, 0.295, 0.553, 1.324, 2.107")
			}
			cell_fall(rf2p_512x64_4_50_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.000, 0.015, 0.062, 0.155, 0.311, 0.777, 1.250");
			values ( \
			  "1.196, 1.206, 1.237, 1.300, 1.409, 1.776, 2.147", \
			  "1.196, 1.206, 1.238, 1.300, 1.410, 1.776, 2.148", \
			  "1.198, 1.208, 1.240, 1.302, 1.412, 1.778, 2.150", \
			  "1.202, 1.212, 1.244, 1.306, 1.416, 1.782, 2.154", \
			  "1.209, 1.219, 1.250, 1.313, 1.422, 1.789, 2.160", \
			  "1.215, 1.225, 1.257, 1.319, 1.429, 1.795, 2.167", \
			  "1.223, 1.233, 1.265, 1.327, 1.437, 1.803, 2.175" \
			)
			}
			fall_transition(rf2p_512x64_4_50_load_template) {
			index_1 ("0.000, 0.015, 0.062, 0.155, 0.311, 0.777, 1.250");
			values ("0.079, 0.097, 0.155, 0.270, 0.463, 1.038, 1.622")
			}
ENDARCDATA
ENDTIMINGDATA
ENDMODELDATA
