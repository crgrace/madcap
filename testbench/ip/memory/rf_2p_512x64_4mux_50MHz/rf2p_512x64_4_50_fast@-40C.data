/*
 *      CONFIDENTIAL AND PROPRIETARY SOFTWARE/DATA OF ARTISAN COMPONENTS, INC.
 *      
 *      Copyright (c) 2019 Artisan Components, Inc.  All Rights Reserved.
 *      
 *      Use of this Software/Data is subject to the terms and conditions of
 *      the applicable license agreement between Artisan Components, Inc. and
 *      Taiwan Semiconductor Manufacturing Company Ltd..  In addition, this Software/Data
 *      is protected by copyright law and international treaties.
 *      
 *      The copyright notice(s) in this Software/Data does not indicate actual
 *      or intended publication of this Software/Data.
 *      name:			RF-2P-HS Register File Generator
 *           			TSMC CL018G Process
 *      version:		2003Q2V2
 *      comment:		
 *      configuration:	 -instname "rf2p_512x64_4_50" -words 512 -bits 64 -frequency 50 -ring_width 10 -mux 4 -drive 3 -write_mask off -wp_size 8 -top_layer met6 -power_type rings -horiz met3 -vert met2 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND
 *
 *      Synopsys model for Synchronous Dual-Port Register File
 *
 *      Library Name:   aci
 *      Instance Name:  rf2p_512x64_4_50
 *      Words:          512
 *      Word Width:     64
 *      Mux:            4
 *      Pipeline:       No
 *      Process:        fast
 *      Delays:		min
 *
 *      Creation Date:  2019-02-18 16:41:51Z
 *      Version:        2003Q2V2
 *
 *      Verified With: Synopsys Primetime
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.
 *          Different modes are defined in order to disable false path
 *          during the specific mode activation when doing static timing analysis. 
 *
 *
 *      Modeling Limitations: This stamp does not include power information.
 *          Due to limitations of the stamp modeling, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

MODELDATA
OPERATING_CONDITION "fast";
DESIGN              "rf2p_512x64_4_50";

CELLDATA
area                   : 518034.639;
default_max_transition : 2.100;
ENDCELLDATA

PORTDATA
QA[63:0] : MAXCAP(1.250);
AA[8:0] : CAP(0.052);
AB[8:0] : CAP(0.052);
CENA : CAP(0.004);
CENB : CAP(0.003);
CLKA : CAP(0.093), MAXTRANS(2.100);
CLKB : CAP(0.098), MAXTRANS(2.100);
DB[63:0] : CAP(0.003);
ENDPORTDATA

TIMINGDATA
GLOBAL
        lu_table_template(rf2p_512x64_4_50_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(rf2p_512x64_4_50_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(rf2p_512x64_4_50_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
ENDGLOBAL

ARCDATA
tch_tasa:
			rise_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.234, 0.236, 0.244, 0.258, 0.283, 0.307, 0.352", \
			  "0.234, 0.236, 0.243, 0.258, 0.282, 0.307, 0.352", \
			  "0.233, 0.235, 0.242, 0.257, 0.281, 0.306, 0.350", \
			  "0.230, 0.232, 0.240, 0.254, 0.279, 0.303, 0.348", \
			  "0.226, 0.228, 0.236, 0.250, 0.274, 0.299, 0.344", \
			  "0.222, 0.224, 0.231, 0.246, 0.270, 0.295, 0.340", \
			  "0.217, 0.219, 0.227, 0.241, 0.265, 0.290, 0.335" \
			)
			}
			fall_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.234, 0.236, 0.244, 0.258, 0.283, 0.307, 0.352", \
			  "0.234, 0.236, 0.243, 0.258, 0.282, 0.307, 0.352", \
			  "0.233, 0.235, 0.242, 0.257, 0.281, 0.306, 0.350", \
			  "0.230, 0.232, 0.240, 0.254, 0.279, 0.303, 0.348", \
			  "0.226, 0.228, 0.236, 0.250, 0.274, 0.299, 0.344", \
			  "0.222, 0.224, 0.231, 0.246, 0.270, 0.295, 0.340", \
			  "0.217, 0.219, 0.227, 0.241, 0.265, 0.290, 0.335" \
			)
			}
ENDARCDATA

ARCDATA
tch_taha:
			rise_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.018, 0.016, 0.008, 0.000, 0.000, 0.000, 0.000", \
			  "0.018, 0.016, 0.008, 0.000, 0.000, 0.000, 0.000", \
			  "0.018, 0.016, 0.008, 0.000, 0.000, 0.000, 0.000", \
			  "0.018, 0.016, 0.008, 0.000, 0.000, 0.000, 0.000", \
			  "0.018, 0.016, 0.008, 0.000, 0.000, 0.000, 0.000", \
			  "0.018, 0.016, 0.008, 0.000, 0.000, 0.000, 0.000", \
			  "0.021, 0.018, 0.008, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.018, 0.016, 0.008, 0.000, 0.000, 0.000, 0.000", \
			  "0.018, 0.016, 0.008, 0.000, 0.000, 0.000, 0.000", \
			  "0.018, 0.016, 0.008, 0.000, 0.000, 0.000, 0.000", \
			  "0.018, 0.016, 0.008, 0.000, 0.000, 0.000, 0.000", \
			  "0.018, 0.016, 0.008, 0.000, 0.000, 0.000, 0.000", \
			  "0.018, 0.016, 0.008, 0.000, 0.000, 0.000, 0.000", \
			  "0.021, 0.018, 0.008, 0.000, 0.000, 0.000, 0.000" \
			)
			}
ENDARCDATA

ARCDATA
tch_tasb:
			rise_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.221, 0.222, 0.230, 0.244, 0.269, 0.294, 0.339", \
			  "0.220, 0.222, 0.229, 0.244, 0.268, 0.294, 0.339", \
			  "0.219, 0.221, 0.228, 0.243, 0.267, 0.292, 0.337", \
			  "0.217, 0.218, 0.226, 0.240, 0.265, 0.290, 0.335", \
			  "0.212, 0.214, 0.222, 0.236, 0.261, 0.286, 0.331", \
			  "0.208, 0.210, 0.218, 0.232, 0.256, 0.282, 0.327", \
			  "0.203, 0.205, 0.213, 0.227, 0.252, 0.277, 0.322" \
			)
			}
			fall_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.221, 0.222, 0.230, 0.244, 0.269, 0.294, 0.339", \
			  "0.220, 0.222, 0.229, 0.244, 0.268, 0.294, 0.339", \
			  "0.219, 0.221, 0.228, 0.243, 0.267, 0.292, 0.337", \
			  "0.217, 0.218, 0.226, 0.240, 0.265, 0.290, 0.335", \
			  "0.212, 0.214, 0.222, 0.236, 0.261, 0.286, 0.331", \
			  "0.208, 0.210, 0.218, 0.232, 0.256, 0.282, 0.327", \
			  "0.203, 0.205, 0.213, 0.227, 0.252, 0.277, 0.322" \
			)
			}
ENDARCDATA

ARCDATA
tch_tahb:
			rise_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.019, 0.017, 0.010, 0.000, 0.000, 0.000, 0.000", \
			  "0.019, 0.017, 0.010, 0.000, 0.000, 0.000, 0.000", \
			  "0.019, 0.017, 0.010, 0.000, 0.000, 0.000, 0.000", \
			  "0.019, 0.017, 0.010, 0.000, 0.000, 0.000, 0.000", \
			  "0.019, 0.017, 0.010, 0.000, 0.000, 0.000, 0.000", \
			  "0.019, 0.017, 0.010, 0.000, 0.000, 0.000, 0.000", \
			  "0.023, 0.020, 0.010, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.019, 0.017, 0.010, 0.000, 0.000, 0.000, 0.000", \
			  "0.019, 0.017, 0.010, 0.000, 0.000, 0.000, 0.000", \
			  "0.019, 0.017, 0.010, 0.000, 0.000, 0.000, 0.000", \
			  "0.019, 0.017, 0.010, 0.000, 0.000, 0.000, 0.000", \
			  "0.019, 0.017, 0.010, 0.000, 0.000, 0.000, 0.000", \
			  "0.019, 0.017, 0.010, 0.000, 0.000, 0.000, 0.000", \
			  "0.023, 0.020, 0.010, 0.000, 0.000, 0.000, 0.000" \
			)
			}
ENDARCDATA

ARCDATA
tch_tcsa:
			rise_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.258, 0.265, 0.289, 0.338, 0.419, 0.500, 0.597", \
			  "0.258, 0.264, 0.289, 0.337, 0.418, 0.499, 0.597", \
			  "0.256, 0.263, 0.287, 0.336, 0.417, 0.498, 0.596", \
			  "0.254, 0.261, 0.285, 0.334, 0.415, 0.496, 0.593", \
			  "0.250, 0.256, 0.281, 0.329, 0.411, 0.492, 0.589", \
			  "0.246, 0.252, 0.277, 0.325, 0.406, 0.488, 0.585", \
			  "0.241, 0.247, 0.272, 0.320, 0.402, 0.483, 0.580" \
			)
			}
			fall_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.258, 0.265, 0.289, 0.338, 0.419, 0.500, 0.597", \
			  "0.258, 0.264, 0.289, 0.337, 0.418, 0.499, 0.597", \
			  "0.256, 0.263, 0.287, 0.336, 0.417, 0.498, 0.596", \
			  "0.254, 0.261, 0.285, 0.334, 0.415, 0.496, 0.593", \
			  "0.250, 0.256, 0.281, 0.329, 0.411, 0.492, 0.589", \
			  "0.246, 0.252, 0.277, 0.325, 0.406, 0.488, 0.585", \
			  "0.241, 0.247, 0.272, 0.320, 0.402, 0.483, 0.580" \
			)
			}
ENDARCDATA

ARCDATA
tch_tcha:
			rise_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.005" \
			)
			}
			fall_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.005" \
			)
			}
ENDARCDATA

ARCDATA
tch_tcsb:
			rise_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.247, 0.253, 0.277, 0.326, 0.407, 0.488, 0.586", \
			  "0.246, 0.253, 0.277, 0.326, 0.407, 0.488, 0.585", \
			  "0.245, 0.251, 0.276, 0.324, 0.406, 0.487, 0.584", \
			  "0.243, 0.249, 0.273, 0.322, 0.403, 0.484, 0.582", \
			  "0.238, 0.245, 0.269, 0.318, 0.399, 0.480, 0.577", \
			  "0.234, 0.241, 0.265, 0.314, 0.395, 0.476, 0.573", \
			  "0.229, 0.236, 0.260, 0.309, 0.390, 0.471, 0.568" \
			)
			}
			fall_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.247, 0.253, 0.277, 0.326, 0.407, 0.488, 0.586", \
			  "0.246, 0.253, 0.277, 0.326, 0.407, 0.488, 0.585", \
			  "0.245, 0.251, 0.276, 0.324, 0.406, 0.487, 0.584", \
			  "0.243, 0.249, 0.273, 0.322, 0.403, 0.484, 0.582", \
			  "0.238, 0.245, 0.269, 0.318, 0.399, 0.480, 0.577", \
			  "0.234, 0.241, 0.265, 0.314, 0.395, 0.476, 0.573", \
			  "0.229, 0.236, 0.260, 0.309, 0.390, 0.471, 0.568" \
			)
			}
ENDARCDATA

ARCDATA
tch_tchb:
			rise_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.005" \
			)
			}
			fall_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.005" \
			)
			}
ENDARCDATA
ARCDATA
tch_tdsb:
			rise_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.000, 0.000, 0.000, 0.037, 0.111, 0.184, 0.272", \
			  "0.000, 0.000, 0.000, 0.037, 0.110, 0.183, 0.271", \
			  "0.000, 0.000, 0.000, 0.036, 0.109, 0.182, 0.270", \
			  "0.000, 0.000, 0.000, 0.033, 0.107, 0.180, 0.268", \
			  "0.000, 0.000, 0.000, 0.029, 0.103, 0.176, 0.264", \
			  "0.000, 0.000, 0.000, 0.025, 0.098, 0.172, 0.259", \
			  "0.000, 0.000, 0.000, 0.020, 0.094, 0.167, 0.254" \
			)
			}
			fall_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.000, 0.000, 0.000, 0.037, 0.111, 0.184, 0.272", \
			  "0.000, 0.000, 0.000, 0.037, 0.110, 0.183, 0.271", \
			  "0.000, 0.000, 0.000, 0.036, 0.109, 0.182, 0.270", \
			  "0.000, 0.000, 0.000, 0.033, 0.107, 0.180, 0.268", \
			  "0.000, 0.000, 0.000, 0.029, 0.103, 0.176, 0.264", \
			  "0.000, 0.000, 0.000, 0.025, 0.098, 0.172, 0.259", \
			  "0.000, 0.000, 0.000, 0.020, 0.094, 0.167, 0.254" \
			)
			}
ENDARCDATA

ARCDATA
tch_tdhb:
			rise_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.118, 0.112, 0.099, 0.109, 0.125, 0.141, 0.161", \
			  "0.118, 0.112, 0.099, 0.109, 0.125, 0.142, 0.161", \
			  "0.119, 0.113, 0.101, 0.110, 0.127, 0.143, 0.162", \
			  "0.122, 0.116, 0.103, 0.113, 0.129, 0.145, 0.165", \
			  "0.126, 0.120, 0.107, 0.117, 0.133, 0.149, 0.169", \
			  "0.130, 0.124, 0.111, 0.121, 0.137, 0.154, 0.173", \
			  "0.135, 0.129, 0.116, 0.126, 0.142, 0.158, 0.178" \
			)
			}
			fall_constraint(rf2p_512x64_4_50_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			values ( \
			  "0.118, 0.112, 0.099, 0.109, 0.125, 0.141, 0.161", \
			  "0.118, 0.112, 0.099, 0.109, 0.125, 0.142, 0.161", \
			  "0.119, 0.113, 0.101, 0.110, 0.127, 0.143, 0.162", \
			  "0.122, 0.116, 0.103, 0.113, 0.129, 0.145, 0.165", \
			  "0.126, 0.120, 0.107, 0.117, 0.133, 0.149, 0.169", \
			  "0.130, 0.124, 0.111, 0.121, 0.137, 0.154, 0.173", \
			  "0.135, 0.129, 0.116, 0.126, 0.142, 0.158, 0.178" \
			)
			}
ENDARCDATA


ARCDATA
period_tcyca:
			rise_constraint(scalar) {
				values ("1.558")
			}
			fall_constraint(scalar) {
				values ("1.558")
			}
ENDARCDATA

ARCDATA
tpw_tckla:
			rise_constraint(scalar) {
				values ("0.149")
			}
			fall_constraint(scalar) {
				values ("0.149")
			}
ENDARCDATA

ARCDATA
tpw_tckha:
			rise_constraint(scalar) {
				values ("0.103")
			}
			fall_constraint(scalar) {
				values ("0.103")
			}
ENDARCDATA

ARCDATA
period_tcycb:
			rise_constraint(scalar) {
				values ("1.545")
			}
			fall_constraint(scalar) {
				values ("1.545")
			}
ENDARCDATA

ARCDATA
tpw_tcklb:
			rise_constraint(scalar) {
				values ("0.129")
			}
			fall_constraint(scalar) {
				values ("0.129")
			}
ENDARCDATA

ARCDATA
tpw_tckhb:
			rise_constraint(scalar) {
				values ("0.098")
			}
			fall_constraint(scalar) {
				values ("0.098")
			}
ENDARCDATA

ARCDATA
tch_tccA:
			rise_constraint(scalar) {
				values ("0.743")
			}
ENDARCDATA

ARCDATA
tch_tccB:
			rise_constraint(scalar) {
				values ("0.743")
			}
ENDARCDATA
ARCDATA
dly_tya:
			cell_rise(rf2p_512x64_4_50_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.000, 0.015, 0.062, 0.155, 0.311, 0.777, 1.250");
			values ( \
			  "1.146, 1.156, 1.186, 1.246, 1.354, 1.706, 2.064", \
			  "1.146, 1.156, 1.186, 1.246, 1.354, 1.707, 2.065", \
			  "1.148, 1.157, 1.188, 1.248, 1.355, 1.708, 2.066", \
			  "1.150, 1.160, 1.190, 1.250, 1.358, 1.710, 2.068", \
			  "1.154, 1.164, 1.194, 1.254, 1.362, 1.714, 2.072", \
			  "1.158, 1.168, 1.198, 1.258, 1.366, 1.719, 2.076", \
			  "1.163, 1.173, 1.203, 1.263, 1.371, 1.723, 2.081" \
			)
			}
			rise_transition(rf2p_512x64_4_50_load_template) {
			index_1 ("0.000, 0.015, 0.062, 0.155, 0.311, 0.777, 1.250");
			values ("0.059, 0.082, 0.156, 0.302, 0.546, 1.275, 2.015")
			}
			cell_fall(rf2p_512x64_4_50_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.100");
			index_2 ("0.000, 0.015, 0.062, 0.155, 0.311, 0.777, 1.250");
			values ( \
			  "1.146, 1.156, 1.186, 1.246, 1.354, 1.706, 2.064", \
			  "1.146, 1.156, 1.186, 1.246, 1.354, 1.707, 2.065", \
			  "1.148, 1.157, 1.188, 1.248, 1.355, 1.708, 2.066", \
			  "1.150, 1.160, 1.190, 1.250, 1.358, 1.710, 2.068", \
			  "1.154, 1.164, 1.194, 1.254, 1.362, 1.714, 2.072", \
			  "1.158, 1.168, 1.198, 1.258, 1.366, 1.719, 2.076", \
			  "1.163, 1.173, 1.203, 1.263, 1.371, 1.723, 2.081" \
			)
			}
			fall_transition(rf2p_512x64_4_50_load_template) {
			index_1 ("0.000, 0.015, 0.062, 0.155, 0.311, 0.777, 1.250");
			values ("0.112, 0.129, 0.184, 0.292, 0.473, 1.015, 1.565")
			}
ENDARCDATA
ENDTIMINGDATA
ENDMODELDATA
