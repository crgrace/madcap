/*
 *      CONFIDENTIAL AND PROPRIETARY SOFTWARE/DATA OF ARTISAN COMPONENTS, INC.
 *      
 *      Copyright (c) 2019 Artisan Components, Inc.  All Rights Reserved.
 *      
 *      Use of this Software/Data is subject to the terms and conditions of
 *      the applicable license agreement between Artisan Components, Inc. and
 *      Taiwan Semiconductor Manufacturing Company Ltd..  In addition, this Software/Data
 *      is protected by copyright law and international treaties.
 *      
 *      The copyright notice(s) in this Software/Data does not indicate actual
 *      or intended publication of this Software/Data.
 *      name:			RF-2P-HS Register File Generator
 *           			TSMC CL018G Process
 *      version:		2003Q2V2
 *      comment:		
 *      configuration:	 -instname "rf2p_512x64_4_50" -words 512 -bits 64 -frequency 50 -ring_width 10 -mux 4 -drive 3 -write_mask off -wp_size 8 -top_layer met6 -power_type rings -horiz met3 -vert met2 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -libname USERLIB
 *
 *      TLF model for Synchronous Dual-Port Register File
 *
 *      Library Name:   USERLIB
 *      Instance Name:  rf2p_512x64_4_50
 *      Words:          512
 *      Word Width:     64
 *      Mux:            4
 *      Pipeline:       No
 *      Process:        fast
 *
 *      Creation Date:  2019-02-18 16:41:59Z
 *      Version:	2003Q2V2
 *
 *      Verified With: Cadence Central Delay Calculator
 *
 *      Modeling Assumptions: This memory model is written using TLF 3.0
 *          constructs.  Warning and Error messages are issued if an input
 *          encounters a slew over the maximum characterized input slew.
 *          Warning messages are issued if an output is presented with greater
 *          that the maximum characterized load.  SDF created with this model
 *          will annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: Due to the limitations of this tool and the
 *          others it interacts with, some data reduction was necessary.  When
 *          reducing data, minimum values were chosen for the fast case corner
 *          and maximum values were used for the typical and best case corners.
 *          It is recommended that critical timing and setup and hold times be
 *          checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */
header(
  library("USERLIB")
  date("2019-02-18 16:42:01Z")
  vendor("Confidential Information of Artisan Components, Inc.  Use subject to Artisan Components license. Copyright (c) 2019 Artisan Components, Inc.")
  environment("fast")
  technology("CMOS")
  version("2003Q2V2")
  tlf_version("4.1")
)
/* wire load */
net_res_model(gateres (linear value(0:~:8.5e-8:5.0e-8 )))
net_cap_model(gatecap (linear value(0:3:1.0e-4:0.005 3:10:3.0e-4:0.002 )))

/* timing properties */
properties(
  /* models for RC delays */
  net_cap (gatecap)
  net_res (gateres)

  /* operating conditions */
  proc_var(1)
  temperature(0.000)
  voltage(1.980)

  /* multipliers and k-factors */
  proc_mult(1.0)
  temp_mult(1.0)
  volt_mult(1.0)

  /* threshold definitions */
  table_input_threshold (0.500)
  table_output_threshold (0.500)
  table_transition_start (0.100)
  table_transition_end (0.900)

  /* defaults */
  slew_limit(warn(2.100) error(2.100))
  load_limit(1.250) /* max output load */

  /* unit attributes */
  unit(
    time_unit(1ns)
    volt_unit(1V)
    current_unit(1uA)
    power_unit(1mW)
    area_unit(1squ)
    cap_unit (1PF)
  )
)

cell(rf2p_512x64_4_50

Area (518034.639)
CT_TOLERANCE(0.198)

TIMING_model (tch_tasa_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (
	    (0.255:0.255:0.255 0.257:0.257:0.257 0.266:0.266:0.266 0.284:0.284:0.284 0.314:0.314:0.314 0.345:0.345:0.345 0.381:0.381:0.381)
	    (0.254:0.254:0.254 0.257:0.257:0.257 0.266:0.266:0.266 0.284:0.284:0.284 0.314:0.314:0.314 0.344:0.344:0.344 0.380:0.380:0.380)
	    (0.252:0.252:0.252 0.255:0.255:0.255 0.264:0.264:0.264 0.282:0.282:0.282 0.312:0.312:0.312 0.342:0.342:0.342 0.378:0.378:0.378)
	    (0.249:0.249:0.249 0.251:0.251:0.251 0.260:0.260:0.260 0.278:0.278:0.278 0.308:0.308:0.308 0.338:0.338:0.338 0.374:0.374:0.374)
	    (0.242:0.242:0.242 0.244:0.244:0.244 0.253:0.253:0.253 0.271:0.271:0.271 0.301:0.301:0.301 0.332:0.332:0.332 0.368:0.368:0.368)
	    (0.235:0.235:0.235 0.238:0.238:0.238 0.247:0.247:0.247 0.265:0.265:0.265 0.295:0.295:0.295 0.325:0.325:0.325 0.361:0.361:0.361)
	    (0.228:0.228:0.228 0.230:0.230:0.230 0.239:0.239:0.239 0.257:0.257:0.257 0.287:0.287:0.287 0.317:0.317:0.317 0.353:0.353:0.353)
	  )))
TIMING_model (tch_tasa_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (
	    (0.255:0.255:0.255 0.257:0.257:0.257 0.266:0.266:0.266 0.284:0.284:0.284 0.314:0.314:0.314 0.345:0.345:0.345 0.381:0.381:0.381)
	    (0.254:0.254:0.254 0.257:0.257:0.257 0.266:0.266:0.266 0.284:0.284:0.284 0.314:0.314:0.314 0.344:0.344:0.344 0.380:0.380:0.380)
	    (0.252:0.252:0.252 0.255:0.255:0.255 0.264:0.264:0.264 0.282:0.282:0.282 0.312:0.312:0.312 0.342:0.342:0.342 0.378:0.378:0.378)
	    (0.249:0.249:0.249 0.251:0.251:0.251 0.260:0.260:0.260 0.278:0.278:0.278 0.308:0.308:0.308 0.338:0.338:0.338 0.374:0.374:0.374)
	    (0.242:0.242:0.242 0.244:0.244:0.244 0.253:0.253:0.253 0.271:0.271:0.271 0.301:0.301:0.301 0.332:0.332:0.332 0.368:0.368:0.368)
	    (0.235:0.235:0.235 0.238:0.238:0.238 0.247:0.247:0.247 0.265:0.265:0.265 0.295:0.295:0.295 0.325:0.325:0.325 0.361:0.361:0.361)
	    (0.228:0.228:0.228 0.230:0.230:0.230 0.239:0.239:0.239 0.257:0.257:0.257 0.287:0.287:0.287 0.317:0.317:0.317 0.353:0.353:0.353)
	  )))
TIMING_model (tch_taha_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (
	    (0.021:0.021:0.021 0.019:0.019:0.019 0.010:0.010:0.010 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.021:0.021:0.021 0.019:0.019:0.019 0.010:0.010:0.010 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.021:0.021:0.021 0.019:0.019:0.019 0.010:0.010:0.010 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.021:0.021:0.021 0.019:0.019:0.019 0.010:0.010:0.010 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.021:0.021:0.021 0.019:0.019:0.019 0.010:0.010:0.010 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.024:0.024:0.024 0.021:0.021:0.021 0.010:0.010:0.010 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.032:0.032:0.032 0.029:0.029:0.029 0.017:0.017:0.017 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	  )))
TIMING_model (tch_taha_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (
	    (0.021:0.021:0.021 0.019:0.019:0.019 0.010:0.010:0.010 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.021:0.021:0.021 0.019:0.019:0.019 0.010:0.010:0.010 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.021:0.021:0.021 0.019:0.019:0.019 0.010:0.010:0.010 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.021:0.021:0.021 0.019:0.019:0.019 0.010:0.010:0.010 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.021:0.021:0.021 0.019:0.019:0.019 0.010:0.010:0.010 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.024:0.024:0.024 0.021:0.021:0.021 0.010:0.010:0.010 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.032:0.032:0.032 0.029:0.029:0.029 0.017:0.017:0.017 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	  )))
TIMING_model (tch_tasb_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (
	    (0.239:0.239:0.239 0.242:0.242:0.242 0.251:0.251:0.251 0.269:0.269:0.269 0.299:0.299:0.299 0.329:0.329:0.329 0.365:0.365:0.365)
	    (0.239:0.239:0.239 0.241:0.241:0.241 0.250:0.250:0.250 0.268:0.268:0.268 0.298:0.298:0.298 0.328:0.328:0.328 0.364:0.364:0.364)
	    (0.237:0.237:0.237 0.239:0.239:0.239 0.248:0.248:0.248 0.266:0.266:0.266 0.296:0.296:0.296 0.326:0.326:0.326 0.362:0.362:0.362)
	    (0.233:0.233:0.233 0.235:0.235:0.235 0.244:0.244:0.244 0.262:0.262:0.262 0.292:0.292:0.292 0.322:0.322:0.322 0.358:0.358:0.358)
	    (0.226:0.226:0.226 0.229:0.229:0.229 0.238:0.238:0.238 0.256:0.256:0.256 0.286:0.286:0.286 0.316:0.316:0.316 0.352:0.352:0.352)
	    (0.220:0.220:0.220 0.222:0.222:0.222 0.231:0.231:0.231 0.249:0.249:0.249 0.279:0.279:0.279 0.309:0.309:0.309 0.345:0.345:0.345)
	    (0.212:0.212:0.212 0.214:0.214:0.214 0.223:0.223:0.223 0.241:0.241:0.241 0.271:0.271:0.271 0.301:0.301:0.301 0.337:0.337:0.337)
	  )))
TIMING_model (tch_tasb_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (
	    (0.239:0.239:0.239 0.242:0.242:0.242 0.251:0.251:0.251 0.269:0.269:0.269 0.299:0.299:0.299 0.329:0.329:0.329 0.365:0.365:0.365)
	    (0.239:0.239:0.239 0.241:0.241:0.241 0.250:0.250:0.250 0.268:0.268:0.268 0.298:0.298:0.298 0.328:0.328:0.328 0.364:0.364:0.364)
	    (0.237:0.237:0.237 0.239:0.239:0.239 0.248:0.248:0.248 0.266:0.266:0.266 0.296:0.296:0.296 0.326:0.326:0.326 0.362:0.362:0.362)
	    (0.233:0.233:0.233 0.235:0.235:0.235 0.244:0.244:0.244 0.262:0.262:0.262 0.292:0.292:0.292 0.322:0.322:0.322 0.358:0.358:0.358)
	    (0.226:0.226:0.226 0.229:0.229:0.229 0.238:0.238:0.238 0.256:0.256:0.256 0.286:0.286:0.286 0.316:0.316:0.316 0.352:0.352:0.352)
	    (0.220:0.220:0.220 0.222:0.222:0.222 0.231:0.231:0.231 0.249:0.249:0.249 0.279:0.279:0.279 0.309:0.309:0.309 0.345:0.345:0.345)
	    (0.212:0.212:0.212 0.214:0.214:0.214 0.223:0.223:0.223 0.241:0.241:0.241 0.271:0.271:0.271 0.301:0.301:0.301 0.337:0.337:0.337)
	  )))
TIMING_model (tch_tahb_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (
	    (0.023:0.023:0.023 0.021:0.021:0.021 0.011:0.011:0.011 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.023:0.023:0.023 0.021:0.021:0.021 0.011:0.011:0.011 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.023:0.023:0.023 0.021:0.021:0.021 0.011:0.011:0.011 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.023:0.023:0.023 0.021:0.021:0.021 0.011:0.011:0.011 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.023:0.023:0.023 0.021:0.021:0.021 0.011:0.011:0.011 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.025:0.025:0.025 0.022:0.022:0.022 0.011:0.011:0.011 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.033:0.033:0.033 0.030:0.030:0.030 0.019:0.019:0.019 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	  )))
TIMING_model (tch_tahb_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (
	    (0.023:0.023:0.023 0.021:0.021:0.021 0.011:0.011:0.011 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.023:0.023:0.023 0.021:0.021:0.021 0.011:0.011:0.011 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.023:0.023:0.023 0.021:0.021:0.021 0.011:0.011:0.011 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.023:0.023:0.023 0.021:0.021:0.021 0.011:0.011:0.011 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.023:0.023:0.023 0.021:0.021:0.021 0.011:0.011:0.011 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.025:0.025:0.025 0.022:0.022:0.022 0.011:0.011:0.011 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.033:0.033:0.033 0.030:0.030:0.030 0.019:0.019:0.019 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	  )))
TIMING_model (tch_tcsa_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (
	    (0.275:0.275:0.275 0.281:0.281:0.281 0.305:0.305:0.305 0.353:0.353:0.353 0.434:0.434:0.434 0.514:0.514:0.514 0.610:0.610:0.610)
	    (0.274:0.274:0.274 0.281:0.281:0.281 0.305:0.305:0.305 0.353:0.353:0.353 0.433:0.433:0.433 0.513:0.513:0.513 0.609:0.609:0.609)
	    (0.272:0.272:0.272 0.279:0.279:0.279 0.303:0.303:0.303 0.351:0.351:0.351 0.431:0.431:0.431 0.511:0.511:0.511 0.607:0.607:0.607)
	    (0.269:0.269:0.269 0.275:0.275:0.275 0.299:0.299:0.299 0.347:0.347:0.347 0.427:0.427:0.427 0.507:0.507:0.507 0.603:0.603:0.603)
	    (0.262:0.262:0.262 0.268:0.268:0.268 0.292:0.292:0.292 0.340:0.340:0.340 0.421:0.421:0.421 0.501:0.501:0.501 0.597:0.597:0.597)
	    (0.255:0.255:0.255 0.262:0.262:0.262 0.286:0.286:0.286 0.334:0.334:0.334 0.414:0.414:0.414 0.494:0.494:0.494 0.590:0.590:0.590)
	    (0.248:0.248:0.248 0.254:0.254:0.254 0.278:0.278:0.278 0.326:0.326:0.326 0.406:0.406:0.406 0.486:0.486:0.486 0.582:0.582:0.582)
	  )))
TIMING_model (tch_tcsa_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (
	    (0.275:0.275:0.275 0.281:0.281:0.281 0.305:0.305:0.305 0.353:0.353:0.353 0.434:0.434:0.434 0.514:0.514:0.514 0.610:0.610:0.610)
	    (0.274:0.274:0.274 0.281:0.281:0.281 0.305:0.305:0.305 0.353:0.353:0.353 0.433:0.433:0.433 0.513:0.513:0.513 0.609:0.609:0.609)
	    (0.272:0.272:0.272 0.279:0.279:0.279 0.303:0.303:0.303 0.351:0.351:0.351 0.431:0.431:0.431 0.511:0.511:0.511 0.607:0.607:0.607)
	    (0.269:0.269:0.269 0.275:0.275:0.275 0.299:0.299:0.299 0.347:0.347:0.347 0.427:0.427:0.427 0.507:0.507:0.507 0.603:0.603:0.603)
	    (0.262:0.262:0.262 0.268:0.268:0.268 0.292:0.292:0.292 0.340:0.340:0.340 0.421:0.421:0.421 0.501:0.501:0.501 0.597:0.597:0.597)
	    (0.255:0.255:0.255 0.262:0.262:0.262 0.286:0.286:0.286 0.334:0.334:0.334 0.414:0.414:0.414 0.494:0.494:0.494 0.590:0.590:0.590)
	    (0.248:0.248:0.248 0.254:0.254:0.254 0.278:0.278:0.278 0.326:0.326:0.326 0.406:0.406:0.406 0.486:0.486:0.486 0.582:0.582:0.582)
	  )))
TIMING_model (tch_tcha_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.002:0.002:0.002)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.010:0.010:0.010)
	  )))
TIMING_model (tch_tcha_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.002:0.002:0.002)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.010:0.010:0.010)
	  )))
TIMING_model (tch_tcsb_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (
	    (0.265:0.265:0.265 0.272:0.272:0.272 0.296:0.296:0.296 0.344:0.344:0.344 0.424:0.424:0.424 0.504:0.504:0.504 0.600:0.600:0.600)
	    (0.265:0.265:0.265 0.271:0.271:0.271 0.295:0.295:0.295 0.343:0.343:0.343 0.423:0.423:0.423 0.503:0.503:0.503 0.599:0.599:0.599)
	    (0.263:0.263:0.263 0.269:0.269:0.269 0.293:0.293:0.293 0.341:0.341:0.341 0.421:0.421:0.421 0.501:0.501:0.501 0.597:0.597:0.597)
	    (0.259:0.259:0.259 0.265:0.265:0.265 0.289:0.289:0.289 0.337:0.337:0.337 0.417:0.417:0.417 0.497:0.497:0.497 0.594:0.594:0.594)
	    (0.252:0.252:0.252 0.259:0.259:0.259 0.283:0.283:0.283 0.331:0.331:0.331 0.411:0.411:0.411 0.491:0.491:0.491 0.587:0.587:0.587)
	    (0.246:0.246:0.246 0.252:0.252:0.252 0.276:0.276:0.276 0.324:0.324:0.324 0.404:0.404:0.404 0.484:0.484:0.484 0.580:0.580:0.580)
	    (0.238:0.238:0.238 0.244:0.244:0.244 0.268:0.268:0.268 0.316:0.316:0.316 0.396:0.396:0.396 0.476:0.476:0.476 0.573:0.573:0.573)
	  )))
TIMING_model (tch_tcsb_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (
	    (0.265:0.265:0.265 0.272:0.272:0.272 0.296:0.296:0.296 0.344:0.344:0.344 0.424:0.424:0.424 0.504:0.504:0.504 0.600:0.600:0.600)
	    (0.265:0.265:0.265 0.271:0.271:0.271 0.295:0.295:0.295 0.343:0.343:0.343 0.423:0.423:0.423 0.503:0.503:0.503 0.599:0.599:0.599)
	    (0.263:0.263:0.263 0.269:0.269:0.269 0.293:0.293:0.293 0.341:0.341:0.341 0.421:0.421:0.421 0.501:0.501:0.501 0.597:0.597:0.597)
	    (0.259:0.259:0.259 0.265:0.265:0.265 0.289:0.289:0.289 0.337:0.337:0.337 0.417:0.417:0.417 0.497:0.497:0.497 0.594:0.594:0.594)
	    (0.252:0.252:0.252 0.259:0.259:0.259 0.283:0.283:0.283 0.331:0.331:0.331 0.411:0.411:0.411 0.491:0.491:0.491 0.587:0.587:0.587)
	    (0.246:0.246:0.246 0.252:0.252:0.252 0.276:0.276:0.276 0.324:0.324:0.324 0.404:0.404:0.404 0.484:0.484:0.484 0.580:0.580:0.580)
	    (0.238:0.238:0.238 0.244:0.244:0.244 0.268:0.268:0.268 0.316:0.316:0.316 0.396:0.396:0.396 0.476:0.476:0.476 0.573:0.573:0.573)
	  )))
TIMING_model (tch_tchb_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.002:0.002:0.002)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.010:0.010:0.010)
	  )))
TIMING_model (tch_tchb_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.002:0.002:0.002)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.010:0.010:0.010)
	  )))
TIMING_model (tch_tdsb_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.034:0.034:0.034 0.105:0.105:0.105 0.175:0.175:0.175 0.260:0.260:0.260)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.034:0.034:0.034 0.104:0.104:0.104 0.175:0.175:0.175 0.259:0.259:0.259)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.032:0.032:0.032 0.102:0.102:0.102 0.173:0.173:0.173 0.257:0.257:0.257)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.028:0.028:0.028 0.098:0.098:0.098 0.169:0.169:0.169 0.253:0.253:0.253)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.021:0.021:0.021 0.092:0.092:0.092 0.162:0.162:0.162 0.247:0.247:0.247)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.014:0.014:0.014 0.085:0.085:0.085 0.155:0.155:0.155 0.240:0.240:0.240)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.007:0.007:0.007 0.077:0.077:0.077 0.148:0.148:0.148 0.232:0.232:0.232)
	  )))
TIMING_model (tch_tdsb_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.034:0.034:0.034 0.105:0.105:0.105 0.175:0.175:0.175 0.260:0.260:0.260)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.034:0.034:0.034 0.104:0.104:0.104 0.175:0.175:0.175 0.259:0.259:0.259)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.032:0.032:0.032 0.102:0.102:0.102 0.173:0.173:0.173 0.257:0.257:0.257)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.028:0.028:0.028 0.098:0.098:0.098 0.169:0.169:0.169 0.253:0.253:0.253)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.021:0.021:0.021 0.092:0.092:0.092 0.162:0.162:0.162 0.247:0.247:0.247)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.014:0.014:0.014 0.085:0.085:0.085 0.155:0.155:0.155 0.240:0.240:0.240)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.007:0.007:0.007 0.077:0.077:0.077 0.148:0.148:0.148 0.232:0.232:0.232)
	  )))
TIMING_model (tch_tdhb_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (
	    (0.125:0.125:0.125 0.119:0.119:0.119 0.106:0.106:0.106 0.115:0.115:0.115 0.129:0.129:0.129 0.144:0.144:0.144 0.162:0.162:0.162)
	    (0.125:0.125:0.125 0.120:0.120:0.120 0.106:0.106:0.106 0.115:0.115:0.115 0.130:0.130:0.130 0.145:0.145:0.145 0.162:0.162:0.162)
	    (0.127:0.127:0.127 0.122:0.122:0.122 0.108:0.108:0.108 0.117:0.117:0.117 0.132:0.132:0.132 0.147:0.147:0.147 0.164:0.164:0.164)
	    (0.131:0.131:0.131 0.126:0.126:0.126 0.112:0.112:0.112 0.121:0.121:0.121 0.136:0.136:0.136 0.151:0.151:0.151 0.168:0.168:0.168)
	    (0.138:0.138:0.138 0.132:0.132:0.132 0.119:0.119:0.119 0.128:0.128:0.128 0.142:0.142:0.142 0.157:0.157:0.157 0.175:0.175:0.175)
	    (0.144:0.144:0.144 0.139:0.139:0.139 0.126:0.126:0.126 0.134:0.134:0.134 0.149:0.149:0.149 0.164:0.164:0.164 0.181:0.181:0.181)
	    (0.152:0.152:0.152 0.147:0.147:0.147 0.133:0.133:0.133 0.142:0.142:0.142 0.157:0.157:0.157 0.172:0.172:0.172 0.189:0.189:0.189)
	  )))
TIMING_model (tch_tdhb_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (
	    (0.125:0.125:0.125 0.119:0.119:0.119 0.106:0.106:0.106 0.115:0.115:0.115 0.129:0.129:0.129 0.144:0.144:0.144 0.162:0.162:0.162)
	    (0.125:0.125:0.125 0.120:0.120:0.120 0.106:0.106:0.106 0.115:0.115:0.115 0.130:0.130:0.130 0.145:0.145:0.145 0.162:0.162:0.162)
	    (0.127:0.127:0.127 0.122:0.122:0.122 0.108:0.108:0.108 0.117:0.117:0.117 0.132:0.132:0.132 0.147:0.147:0.147 0.164:0.164:0.164)
	    (0.131:0.131:0.131 0.126:0.126:0.126 0.112:0.112:0.112 0.121:0.121:0.121 0.136:0.136:0.136 0.151:0.151:0.151 0.168:0.168:0.168)
	    (0.138:0.138:0.138 0.132:0.132:0.132 0.119:0.119:0.119 0.128:0.128:0.128 0.142:0.142:0.142 0.157:0.157:0.157 0.175:0.175:0.175)
	    (0.144:0.144:0.144 0.139:0.139:0.139 0.126:0.126:0.126 0.134:0.134:0.134 0.149:0.149:0.149 0.164:0.164:0.164 0.181:0.181:0.181)
	    (0.152:0.152:0.152 0.147:0.147:0.147 0.133:0.133:0.133 0.142:0.142:0.142 0.157:0.157:0.157 0.172:0.172:0.172 0.189:0.189:0.189)
	  )))
TIMING_model (period_tcyca (const (1.63983705409094)))
TIMING_model (tpw_tckla (const (0.1613)))
TIMING_model (tpw_tckha (const (0.11)))
TIMING_model (period_tcycb (const (1.61302684048157)))
TIMING_model (tpw_tcklb (const (0.14)))
TIMING_model (tpw_tckhb (const (0.1037)))
TIMING_model (tch_tcc (const (0.782624121497108)))
TIMING_model (sl_qar 	(spline
	  (load_axis 0.000 0.015 0.062 0.155 0.311 0.777 1.250)
	  ((0.038 0.063 0.141 0.295 0.553 1.324 2.107))))
TIMING_model (sl_qaf 	(spline
	  (load_axis 0.000 0.015 0.062 0.155 0.311 0.777 1.250)
	  ((0.079 0.097 0.155 0.270 0.463 1.038 1.622))))
TIMING_model (dly_taar 	(spline
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (load_axis 0.000 0.015 0.062 0.155 0.311 0.777 1.250)
	  (
	    (1.196:1.196:1.196 1.206:1.206:1.206 1.237:1.237:1.237 1.300:1.300:1.300 1.409:1.409:1.409 1.776:1.776:1.776 2.147:2.147:2.147)
	    (1.196:1.196:1.196 1.206:1.206:1.206 1.238:1.238:1.238 1.300:1.300:1.300 1.410:1.410:1.410 1.776:1.776:1.776 2.148:2.148:2.148)
	    (1.198:1.198:1.198 1.208:1.208:1.208 1.240:1.240:1.240 1.302:1.302:1.302 1.412:1.412:1.412 1.778:1.778:1.778 2.150:2.150:2.150)
	    (1.202:1.202:1.202 1.212:1.212:1.212 1.244:1.244:1.244 1.306:1.306:1.306 1.416:1.416:1.416 1.782:1.782:1.782 2.154:2.154:2.154)
	    (1.209:1.209:1.209 1.219:1.219:1.219 1.250:1.250:1.250 1.313:1.313:1.313 1.422:1.422:1.422 1.789:1.789:1.789 2.160:2.160:2.160)
	    (1.215:1.215:1.215 1.225:1.225:1.225 1.257:1.257:1.257 1.319:1.319:1.319 1.429:1.429:1.429 1.795:1.795:1.795 2.167:2.167:2.167)
	    (1.223:1.223:1.223 1.233:1.233:1.233 1.265:1.265:1.265 1.327:1.327:1.327 1.437:1.437:1.437 1.803:1.803:1.803 2.175:2.175:2.175)
	  )))
TIMING_model (dly_taaf 	(spline
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 1.500 2.100)
	  (load_axis 0.000 0.015 0.062 0.155 0.311 0.777 1.250)
	  (
	    (1.196:1.196:1.196 1.206:1.206:1.206 1.237:1.237:1.237 1.300:1.300:1.300 1.409:1.409:1.409 1.776:1.776:1.776 2.147:2.147:2.147)
	    (1.196:1.196:1.196 1.206:1.206:1.206 1.238:1.238:1.238 1.300:1.300:1.300 1.410:1.410:1.410 1.776:1.776:1.776 2.148:2.148:2.148)
	    (1.198:1.198:1.198 1.208:1.208:1.208 1.240:1.240:1.240 1.302:1.302:1.302 1.412:1.412:1.412 1.778:1.778:1.778 2.150:2.150:2.150)
	    (1.202:1.202:1.202 1.212:1.212:1.212 1.244:1.244:1.244 1.306:1.306:1.306 1.416:1.416:1.416 1.782:1.782:1.782 2.154:2.154:2.154)
	    (1.209:1.209:1.209 1.219:1.219:1.219 1.250:1.250:1.250 1.313:1.313:1.313 1.422:1.422:1.422 1.789:1.789:1.789 2.160:2.160:2.160)
	    (1.215:1.215:1.215 1.225:1.225:1.225 1.257:1.257:1.257 1.319:1.319:1.319 1.429:1.429:1.429 1.795:1.795:1.795 2.167:2.167:2.167)
	    (1.223:1.223:1.223 1.233:1.233:1.233 1.265:1.265:1.265 1.327:1.327:1.327 1.437:1.437:1.437 1.803:1.803:1.803 2.175:2.175:2.175)
	  )))

bus(QA[63:0] bustype(output)
 load_limit(warn(1.250) error(2.147483647e3))
 capacitance(0.0)
)
bus(AA[8:0] bustype(input)
 capacitance(0.052)
)
bus(AB[8:0] bustype(input)
 capacitance(0.052)
)
pin(CENA pintype(input)
 capacitance(0.004)
)
pin(CENB pintype(input)
 capacitance(0.003)
)
pin(CLKA clock_pin pintype(input)
 slew_limit(warn(2.100) error(2.100))
 capacitance(0.094)
)
pin(CLKB clock_pin pintype(input)
 slew_limit(warn(2.100) error(2.100))
 capacitance(0.098)
)
bus(DB[63:0] bustype(input)
 capacitance(0.003)
)
pin(VDD pintype(supply) vdrop_limit(0.099))
pin(VSS pintype(ground) vdrop_limit(0.099))
setup (AA[0] => CLKA 01 posedge tch_tasa_rise)
setup (AA[0] => CLKA 10 posedge tch_tasa_fall)
hold (AA[0] => CLKA 01 posedge tch_taha_rise)
hold (AA[0] => CLKA 10 posedge tch_taha_fall)
setup (AA[1] => CLKA 01 posedge tch_tasa_rise)
setup (AA[1] => CLKA 10 posedge tch_tasa_fall)
hold (AA[1] => CLKA 01 posedge tch_taha_rise)
hold (AA[1] => CLKA 10 posedge tch_taha_fall)
setup (AA[2] => CLKA 01 posedge tch_tasa_rise)
setup (AA[2] => CLKA 10 posedge tch_tasa_fall)
hold (AA[2] => CLKA 01 posedge tch_taha_rise)
hold (AA[2] => CLKA 10 posedge tch_taha_fall)
setup (AA[3] => CLKA 01 posedge tch_tasa_rise)
setup (AA[3] => CLKA 10 posedge tch_tasa_fall)
hold (AA[3] => CLKA 01 posedge tch_taha_rise)
hold (AA[3] => CLKA 10 posedge tch_taha_fall)
setup (AA[4] => CLKA 01 posedge tch_tasa_rise)
setup (AA[4] => CLKA 10 posedge tch_tasa_fall)
hold (AA[4] => CLKA 01 posedge tch_taha_rise)
hold (AA[4] => CLKA 10 posedge tch_taha_fall)
setup (AA[5] => CLKA 01 posedge tch_tasa_rise)
setup (AA[5] => CLKA 10 posedge tch_tasa_fall)
hold (AA[5] => CLKA 01 posedge tch_taha_rise)
hold (AA[5] => CLKA 10 posedge tch_taha_fall)
setup (AA[6] => CLKA 01 posedge tch_tasa_rise)
setup (AA[6] => CLKA 10 posedge tch_tasa_fall)
hold (AA[6] => CLKA 01 posedge tch_taha_rise)
hold (AA[6] => CLKA 10 posedge tch_taha_fall)
setup (AA[7] => CLKA 01 posedge tch_tasa_rise)
setup (AA[7] => CLKA 10 posedge tch_tasa_fall)
hold (AA[7] => CLKA 01 posedge tch_taha_rise)
hold (AA[7] => CLKA 10 posedge tch_taha_fall)
setup (AA[8] => CLKA 01 posedge tch_tasa_rise)
setup (AA[8] => CLKA 10 posedge tch_tasa_fall)
hold (AA[8] => CLKA 01 posedge tch_taha_rise)
hold (AA[8] => CLKA 10 posedge tch_taha_fall)
setup (AB[0] => CLKB 01 posedge tch_tasb_rise)
setup (AB[0] => CLKB 10 posedge tch_tasb_fall)
hold (AB[0] => CLKB 01 posedge tch_tahb_rise)
hold (AB[0] => CLKB 10 posedge tch_tahb_fall)
setup (AB[1] => CLKB 01 posedge tch_tasb_rise)
setup (AB[1] => CLKB 10 posedge tch_tasb_fall)
hold (AB[1] => CLKB 01 posedge tch_tahb_rise)
hold (AB[1] => CLKB 10 posedge tch_tahb_fall)
setup (AB[2] => CLKB 01 posedge tch_tasb_rise)
setup (AB[2] => CLKB 10 posedge tch_tasb_fall)
hold (AB[2] => CLKB 01 posedge tch_tahb_rise)
hold (AB[2] => CLKB 10 posedge tch_tahb_fall)
setup (AB[3] => CLKB 01 posedge tch_tasb_rise)
setup (AB[3] => CLKB 10 posedge tch_tasb_fall)
hold (AB[3] => CLKB 01 posedge tch_tahb_rise)
hold (AB[3] => CLKB 10 posedge tch_tahb_fall)
setup (AB[4] => CLKB 01 posedge tch_tasb_rise)
setup (AB[4] => CLKB 10 posedge tch_tasb_fall)
hold (AB[4] => CLKB 01 posedge tch_tahb_rise)
hold (AB[4] => CLKB 10 posedge tch_tahb_fall)
setup (AB[5] => CLKB 01 posedge tch_tasb_rise)
setup (AB[5] => CLKB 10 posedge tch_tasb_fall)
hold (AB[5] => CLKB 01 posedge tch_tahb_rise)
hold (AB[5] => CLKB 10 posedge tch_tahb_fall)
setup (AB[6] => CLKB 01 posedge tch_tasb_rise)
setup (AB[6] => CLKB 10 posedge tch_tasb_fall)
hold (AB[6] => CLKB 01 posedge tch_tahb_rise)
hold (AB[6] => CLKB 10 posedge tch_tahb_fall)
setup (AB[7] => CLKB 01 posedge tch_tasb_rise)
setup (AB[7] => CLKB 10 posedge tch_tasb_fall)
hold (AB[7] => CLKB 01 posedge tch_tahb_rise)
hold (AB[7] => CLKB 10 posedge tch_tahb_fall)
setup (AB[8] => CLKB 01 posedge tch_tasb_rise)
setup (AB[8] => CLKB 10 posedge tch_tasb_fall)
hold (AB[8] => CLKB 01 posedge tch_tahb_rise)
hold (AB[8] => CLKB 10 posedge tch_tahb_fall)
setup (CENA => CLKA 01 posedge tch_tcsa_rise)
setup (CENA => CLKA 10 posedge tch_tcsa_fall)
hold (CENA => CLKA 01 posedge tch_tcha_rise)
hold (CENA => CLKA 10 posedge tch_tcha_fall)
setup (CENB => CLKB 01 posedge tch_tcsb_rise)
setup (CENB => CLKB 10 posedge tch_tcsb_fall)
hold (CENB => CLKB 01 posedge tch_tchb_rise)
hold (CENB => CLKB 10 posedge tch_tchb_fall)
setup (DB[0] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[0] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[0] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[0] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[1] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[1] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[1] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[1] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[2] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[2] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[2] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[2] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[3] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[3] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[3] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[3] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[4] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[4] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[4] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[4] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[5] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[5] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[5] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[5] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[6] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[6] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[6] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[6] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[7] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[7] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[7] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[7] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[8] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[8] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[8] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[8] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[9] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[9] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[9] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[9] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[10] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[10] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[10] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[10] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[11] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[11] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[11] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[11] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[12] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[12] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[12] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[12] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[13] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[13] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[13] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[13] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[14] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[14] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[14] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[14] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[15] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[15] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[15] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[15] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[16] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[16] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[16] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[16] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[17] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[17] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[17] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[17] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[18] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[18] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[18] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[18] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[19] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[19] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[19] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[19] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[20] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[20] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[20] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[20] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[21] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[21] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[21] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[21] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[22] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[22] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[22] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[22] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[23] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[23] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[23] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[23] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[24] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[24] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[24] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[24] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[25] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[25] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[25] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[25] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[26] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[26] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[26] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[26] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[27] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[27] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[27] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[27] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[28] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[28] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[28] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[28] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[29] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[29] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[29] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[29] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[30] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[30] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[30] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[30] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[31] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[31] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[31] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[31] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[32] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[32] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[32] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[32] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[33] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[33] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[33] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[33] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[34] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[34] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[34] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[34] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[35] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[35] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[35] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[35] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[36] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[36] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[36] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[36] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[37] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[37] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[37] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[37] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[38] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[38] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[38] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[38] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[39] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[39] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[39] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[39] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[40] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[40] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[40] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[40] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[41] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[41] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[41] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[41] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[42] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[42] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[42] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[42] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[43] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[43] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[43] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[43] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[44] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[44] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[44] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[44] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[45] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[45] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[45] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[45] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[46] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[46] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[46] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[46] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[47] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[47] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[47] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[47] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[48] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[48] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[48] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[48] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[49] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[49] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[49] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[49] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[50] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[50] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[50] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[50] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[51] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[51] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[51] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[51] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[52] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[52] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[52] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[52] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[53] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[53] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[53] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[53] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[54] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[54] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[54] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[54] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[55] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[55] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[55] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[55] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[56] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[56] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[56] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[56] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[57] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[57] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[57] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[57] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[58] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[58] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[58] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[58] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[59] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[59] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[59] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[59] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[60] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[60] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[60] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[60] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[61] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[61] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[61] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[61] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[62] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[62] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[62] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[62] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[63] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[63] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[63] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[63] => CLKB 10 posedge tch_tdhb_fall)
period (CLKA 01 period_tcyca)
mpwl (CLKA tpw_tckla)
mpwh (CLKA tpw_tckha)
period (CLKB 01 period_tcycb)
mpwl (CLKB tpw_tcklb)
mpwh (CLKB tpw_tckhb)
setup (CLKA => CLKB 01 posEdge tch_tcc)
setup (CLKB => CLKA 01 posEdge tch_tcc)
path (CLKA => QA[0] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[0] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[1] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[1] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[2] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[2] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[3] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[3] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[4] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[4] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[5] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[5] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[6] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[6] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[7] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[7] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[8] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[8] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[9] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[9] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[10] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[10] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[11] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[11] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[12] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[12] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[13] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[13] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[14] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[14] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[15] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[15] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[16] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[16] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[17] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[17] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[18] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[18] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[19] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[19] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[20] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[20] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[21] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[21] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[22] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[22] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[23] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[23] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[24] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[24] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[25] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[25] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[26] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[26] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[27] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[27] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[28] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[28] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[29] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[29] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[30] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[30] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[31] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[31] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[32] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[32] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[33] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[33] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[34] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[34] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[35] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[35] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[36] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[36] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[37] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[37] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[38] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[38] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[39] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[39] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[40] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[40] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[41] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[41] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[42] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[42] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[43] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[43] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[44] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[44] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[45] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[45] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[46] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[46] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[47] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[47] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[48] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[48] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[49] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[49] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[50] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[50] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[51] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[51] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[52] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[52] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[53] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[53] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[54] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[54] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[55] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[55] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[56] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[56] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[57] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[57] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[58] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[58] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[59] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[59] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[60] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[60] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[61] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[61] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[62] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[62] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[63] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[63] 01 10 delay(dly_taaf) slew(sl_qaf))
)
