/*
 *      CONFIDENTIAL AND PROPRIETARY SOFTWARE/DATA OF ARTISAN COMPONENTS, INC.
 *      
 *      Copyright (c) 2019 Artisan Components, Inc.  All Rights Reserved.
 *      
 *      Use of this Software/Data is subject to the terms and conditions of
 *      the applicable license agreement between Artisan Components, Inc. and
 *      Taiwan Semiconductor Manufacturing Company Ltd..  In addition, this Software/Data
 *      is protected by copyright law and international treaties.
 *      
 *      The copyright notice(s) in this Software/Data does not indicate actual
 *      or intended publication of this Software/Data.
 *      name:			RF-2P-HS Register File Generator
 *           			TSMC CL018G Process
 *      version:		2003Q2V2
 *      comment:		
 *      configuration:	 -instname "rf2p_512x64_4_50" -words 512 -bits 64 -frequency 50 -ring_width 10 -mux 4 -drive 3 -write_mask off -wp_size 8 -top_layer met6 -power_type rings -horiz met3 -vert met2 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -libname USERLIB
 *
 *      TLF model for Synchronous Dual-Port Register File
 *
 *      Library Name:   USERLIB
 *      Instance Name:  rf2p_512x64_4_50
 *      Words:          512
 *      Word Width:     64
 *      Mux:            4
 *      Pipeline:       No
 *      Process:        typical
 *
 *      Creation Date:  2019-02-18 16:42:01Z
 *      Version:	2003Q2V2
 *
 *      Verified With: Cadence Central Delay Calculator
 *
 *      Modeling Assumptions: This memory model is written using TLF 3.0
 *          constructs.  Warning and Error messages are issued if an input
 *          encounters a slew over the maximum characterized input slew.
 *          Warning messages are issued if an output is presented with greater
 *          that the maximum characterized load.  SDF created with this model
 *          will annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: Due to the limitations of this tool and the
 *          others it interacts with, some data reduction was necessary.  When
 *          reducing data, minimum values were chosen for the fast case corner
 *          and maximum values were used for the typical and best case corners.
 *          It is recommended that critical timing and setup and hold times be
 *          checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */
header(
  library("USERLIB")
  date("2019-02-18 16:42:04Z")
  vendor("Confidential Information of Artisan Components, Inc.  Use subject to Artisan Components license. Copyright (c) 2019 Artisan Components, Inc.")
  environment("typical")
  technology("CMOS")
  version("2003Q2V2")
  tlf_version("4.1")
)
/* wire load */
net_res_model(gateres (linear value(0:~:8.5e-8:5.0e-8 )))
net_cap_model(gatecap (linear value(0:3:1.0e-4:0.005 3:10:3.0e-4:0.002 )))

/* timing properties */
properties(
  /* models for RC delays */
  net_cap (gatecap)
  net_res (gateres)

  /* operating conditions */
  proc_var(1)
  temperature(25.000)
  voltage(1.800)

  /* multipliers and k-factors */
  proc_mult(1.0)
  temp_mult(1.0)
  volt_mult(1.0)

  /* threshold definitions */
  table_input_threshold (0.500)
  table_output_threshold (0.500)
  table_transition_start (0.100)
  table_transition_end (0.900)

  /* defaults */
  slew_limit(warn(2.700) error(2.700))
  load_limit(1.250) /* max output load */

  /* unit attributes */
  unit(
    time_unit(1ns)
    volt_unit(1V)
    current_unit(1uA)
    power_unit(1mW)
    area_unit(1squ)
    cap_unit (1PF)
  )
)

cell(rf2p_512x64_4_50

Area (518034.639)
CT_TOLERANCE(0.180)

TIMING_model (tch_tasa_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (
	    (0.405:0.405:0.405 0.408:0.408:0.408 0.422:0.422:0.422 0.449:0.449:0.449 0.494:0.494:0.494 0.583:0.583:0.583 0.646:0.646:0.646)
	    (0.403:0.403:0.403 0.407:0.407:0.407 0.420:0.420:0.420 0.447:0.447:0.447 0.492:0.492:0.492 0.582:0.582:0.582 0.645:0.645:0.645)
	    (0.397:0.397:0.397 0.400:0.400:0.400 0.414:0.414:0.414 0.441:0.441:0.441 0.486:0.486:0.486 0.576:0.576:0.576 0.638:0.638:0.638)
	    (0.384:0.384:0.384 0.388:0.388:0.388 0.401:0.401:0.401 0.428:0.428:0.428 0.473:0.473:0.473 0.563:0.563:0.563 0.626:0.626:0.626)
	    (0.364:0.364:0.364 0.367:0.367:0.367 0.381:0.381:0.381 0.408:0.408:0.408 0.453:0.453:0.453 0.543:0.543:0.543 0.605:0.605:0.605)
	    (0.322:0.322:0.322 0.326:0.326:0.326 0.339:0.339:0.339 0.366:0.366:0.366 0.411:0.411:0.411 0.501:0.501:0.501 0.564:0.564:0.564)
	    (0.293:0.293:0.293 0.297:0.297:0.297 0.311:0.311:0.311 0.338:0.338:0.338 0.382:0.382:0.382 0.472:0.472:0.472 0.535:0.535:0.535)
	  )))
TIMING_model (tch_tasa_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (
	    (0.405:0.405:0.405 0.408:0.408:0.408 0.422:0.422:0.422 0.449:0.449:0.449 0.494:0.494:0.494 0.583:0.583:0.583 0.646:0.646:0.646)
	    (0.403:0.403:0.403 0.407:0.407:0.407 0.420:0.420:0.420 0.447:0.447:0.447 0.492:0.492:0.492 0.582:0.582:0.582 0.645:0.645:0.645)
	    (0.397:0.397:0.397 0.400:0.400:0.400 0.414:0.414:0.414 0.441:0.441:0.441 0.486:0.486:0.486 0.576:0.576:0.576 0.638:0.638:0.638)
	    (0.384:0.384:0.384 0.388:0.388:0.388 0.401:0.401:0.401 0.428:0.428:0.428 0.473:0.473:0.473 0.563:0.563:0.563 0.626:0.626:0.626)
	    (0.364:0.364:0.364 0.367:0.367:0.367 0.381:0.381:0.381 0.408:0.408:0.408 0.453:0.453:0.453 0.543:0.543:0.543 0.605:0.605:0.605)
	    (0.322:0.322:0.322 0.326:0.326:0.326 0.339:0.339:0.339 0.366:0.366:0.366 0.411:0.411:0.411 0.501:0.501:0.501 0.564:0.564:0.564)
	    (0.293:0.293:0.293 0.297:0.297:0.297 0.311:0.311:0.311 0.338:0.338:0.338 0.382:0.382:0.382 0.472:0.472:0.472 0.535:0.535:0.535)
	  )))
TIMING_model (tch_taha_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (
	    (0.035:0.035:0.035 0.031:0.031:0.031 0.018:0.018:0.018 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.035:0.035:0.035 0.031:0.031:0.031 0.018:0.018:0.018 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.035:0.035:0.035 0.031:0.031:0.031 0.018:0.018:0.018 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.035:0.035:0.035 0.031:0.031:0.031 0.018:0.018:0.018 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.038:0.038:0.038 0.035:0.035:0.035 0.024:0.024:0.024 0.001:0.001:0.001 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.080:0.080:0.080 0.077:0.077:0.077 0.065:0.065:0.065 0.042:0.042:0.042 0.004:0.004:0.004 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.108:0.108:0.108 0.105:0.105:0.105 0.094:0.094:0.094 0.071:0.071:0.071 0.033:0.033:0.033 0.000:0.000:0.000 0.000:0.000:0.000)
	  )))
TIMING_model (tch_taha_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (
	    (0.035:0.035:0.035 0.031:0.031:0.031 0.018:0.018:0.018 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.035:0.035:0.035 0.031:0.031:0.031 0.018:0.018:0.018 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.035:0.035:0.035 0.031:0.031:0.031 0.018:0.018:0.018 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.035:0.035:0.035 0.031:0.031:0.031 0.018:0.018:0.018 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.038:0.038:0.038 0.035:0.035:0.035 0.024:0.024:0.024 0.001:0.001:0.001 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.080:0.080:0.080 0.077:0.077:0.077 0.065:0.065:0.065 0.042:0.042:0.042 0.004:0.004:0.004 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.108:0.108:0.108 0.105:0.105:0.105 0.094:0.094:0.094 0.071:0.071:0.071 0.033:0.033:0.033 0.000:0.000:0.000 0.000:0.000:0.000)
	  )))
TIMING_model (tch_tasb_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (
	    (0.387:0.387:0.387 0.391:0.391:0.391 0.404:0.404:0.404 0.431:0.431:0.431 0.476:0.476:0.476 0.566:0.566:0.566 0.629:0.629:0.629)
	    (0.385:0.385:0.385 0.389:0.389:0.389 0.402:0.402:0.402 0.429:0.429:0.429 0.474:0.474:0.474 0.564:0.564:0.564 0.627:0.627:0.627)
	    (0.379:0.379:0.379 0.383:0.383:0.383 0.396:0.396:0.396 0.423:0.423:0.423 0.468:0.468:0.468 0.558:0.558:0.558 0.621:0.621:0.621)
	    (0.367:0.367:0.367 0.370:0.370:0.370 0.384:0.384:0.384 0.411:0.411:0.411 0.456:0.456:0.456 0.546:0.546:0.546 0.608:0.608:0.608)
	    (0.346:0.346:0.346 0.350:0.350:0.350 0.363:0.363:0.363 0.390:0.390:0.390 0.435:0.435:0.435 0.525:0.525:0.525 0.588:0.588:0.588)
	    (0.305:0.305:0.305 0.308:0.308:0.308 0.322:0.322:0.322 0.349:0.349:0.349 0.394:0.394:0.394 0.484:0.484:0.484 0.547:0.547:0.547)
	    (0.276:0.276:0.276 0.280:0.280:0.280 0.293:0.293:0.293 0.320:0.320:0.320 0.365:0.365:0.365 0.455:0.455:0.455 0.518:0.518:0.518)
	  )))
TIMING_model (tch_tasb_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (
	    (0.387:0.387:0.387 0.391:0.391:0.391 0.404:0.404:0.404 0.431:0.431:0.431 0.476:0.476:0.476 0.566:0.566:0.566 0.629:0.629:0.629)
	    (0.385:0.385:0.385 0.389:0.389:0.389 0.402:0.402:0.402 0.429:0.429:0.429 0.474:0.474:0.474 0.564:0.564:0.564 0.627:0.627:0.627)
	    (0.379:0.379:0.379 0.383:0.383:0.383 0.396:0.396:0.396 0.423:0.423:0.423 0.468:0.468:0.468 0.558:0.558:0.558 0.621:0.621:0.621)
	    (0.367:0.367:0.367 0.370:0.370:0.370 0.384:0.384:0.384 0.411:0.411:0.411 0.456:0.456:0.456 0.546:0.546:0.546 0.608:0.608:0.608)
	    (0.346:0.346:0.346 0.350:0.350:0.350 0.363:0.363:0.363 0.390:0.390:0.390 0.435:0.435:0.435 0.525:0.525:0.525 0.588:0.588:0.588)
	    (0.305:0.305:0.305 0.308:0.308:0.308 0.322:0.322:0.322 0.349:0.349:0.349 0.394:0.394:0.394 0.484:0.484:0.484 0.547:0.547:0.547)
	    (0.276:0.276:0.276 0.280:0.280:0.280 0.293:0.293:0.293 0.320:0.320:0.320 0.365:0.365:0.365 0.455:0.455:0.455 0.518:0.518:0.518)
	  )))
TIMING_model (tch_tahb_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (
	    (0.038:0.038:0.038 0.034:0.034:0.034 0.020:0.020:0.020 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.038:0.038:0.038 0.034:0.034:0.034 0.020:0.020:0.020 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.038:0.038:0.038 0.034:0.034:0.034 0.020:0.020:0.020 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.038:0.038:0.038 0.034:0.034:0.034 0.020:0.020:0.020 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.041:0.041:0.041 0.038:0.038:0.038 0.026:0.026:0.026 0.003:0.003:0.003 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.082:0.082:0.082 0.079:0.079:0.079 0.067:0.067:0.067 0.044:0.044:0.044 0.006:0.006:0.006 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.111:0.111:0.111 0.108:0.108:0.108 0.096:0.096:0.096 0.073:0.073:0.073 0.035:0.035:0.035 0.000:0.000:0.000 0.000:0.000:0.000)
	  )))
TIMING_model (tch_tahb_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (
	    (0.038:0.038:0.038 0.034:0.034:0.034 0.020:0.020:0.020 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.038:0.038:0.038 0.034:0.034:0.034 0.020:0.020:0.020 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.038:0.038:0.038 0.034:0.034:0.034 0.020:0.020:0.020 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.038:0.038:0.038 0.034:0.034:0.034 0.020:0.020:0.020 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.041:0.041:0.041 0.038:0.038:0.038 0.026:0.026:0.026 0.003:0.003:0.003 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.082:0.082:0.082 0.079:0.079:0.079 0.067:0.067:0.067 0.044:0.044:0.044 0.006:0.006:0.006 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.111:0.111:0.111 0.108:0.108:0.108 0.096:0.096:0.096 0.073:0.073:0.073 0.035:0.035:0.035 0.000:0.000:0.000 0.000:0.000:0.000)
	  )))
TIMING_model (tch_tcsa_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (
	    (0.392:0.392:0.392 0.398:0.398:0.398 0.421:0.421:0.421 0.467:0.467:0.467 0.544:0.544:0.544 0.698:0.698:0.698 0.805:0.805:0.805)
	    (0.390:0.390:0.390 0.397:0.397:0.397 0.420:0.420:0.420 0.466:0.466:0.466 0.542:0.542:0.542 0.696:0.696:0.696 0.803:0.803:0.803)
	    (0.384:0.384:0.384 0.390:0.390:0.390 0.413:0.413:0.413 0.459:0.459:0.459 0.536:0.536:0.536 0.690:0.690:0.690 0.797:0.797:0.797)
	    (0.372:0.372:0.372 0.378:0.378:0.378 0.401:0.401:0.401 0.447:0.447:0.447 0.524:0.524:0.524 0.677:0.677:0.677 0.785:0.785:0.785)
	    (0.351:0.351:0.351 0.357:0.357:0.357 0.380:0.380:0.380 0.426:0.426:0.426 0.503:0.503:0.503 0.657:0.657:0.657 0.764:0.764:0.764)
	    (0.310:0.310:0.310 0.316:0.316:0.316 0.339:0.339:0.339 0.385:0.385:0.385 0.462:0.462:0.462 0.615:0.615:0.615 0.723:0.723:0.723)
	    (0.281:0.281:0.281 0.287:0.287:0.287 0.310:0.310:0.310 0.356:0.356:0.356 0.433:0.433:0.433 0.586:0.586:0.586 0.694:0.694:0.694)
	  )))
TIMING_model (tch_tcsa_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (
	    (0.392:0.392:0.392 0.398:0.398:0.398 0.421:0.421:0.421 0.467:0.467:0.467 0.544:0.544:0.544 0.698:0.698:0.698 0.805:0.805:0.805)
	    (0.390:0.390:0.390 0.397:0.397:0.397 0.420:0.420:0.420 0.466:0.466:0.466 0.542:0.542:0.542 0.696:0.696:0.696 0.803:0.803:0.803)
	    (0.384:0.384:0.384 0.390:0.390:0.390 0.413:0.413:0.413 0.459:0.459:0.459 0.536:0.536:0.536 0.690:0.690:0.690 0.797:0.797:0.797)
	    (0.372:0.372:0.372 0.378:0.378:0.378 0.401:0.401:0.401 0.447:0.447:0.447 0.524:0.524:0.524 0.677:0.677:0.677 0.785:0.785:0.785)
	    (0.351:0.351:0.351 0.357:0.357:0.357 0.380:0.380:0.380 0.426:0.426:0.426 0.503:0.503:0.503 0.657:0.657:0.657 0.764:0.764:0.764)
	    (0.310:0.310:0.310 0.316:0.316:0.316 0.339:0.339:0.339 0.385:0.385:0.385 0.462:0.462:0.462 0.615:0.615:0.615 0.723:0.723:0.723)
	    (0.281:0.281:0.281 0.287:0.287:0.287 0.310:0.310:0.310 0.356:0.356:0.356 0.433:0.433:0.433 0.586:0.586:0.586 0.694:0.694:0.694)
	  )))
TIMING_model (tch_tcha_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.023:0.023:0.023 0.017:0.017:0.017 0.008:0.008:0.008 0.005:0.005:0.005 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	  )))
TIMING_model (tch_tcha_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.023:0.023:0.023 0.017:0.017:0.017 0.008:0.008:0.008 0.005:0.005:0.005 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	  )))
TIMING_model (tch_tcsb_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (
	    (0.378:0.378:0.378 0.384:0.384:0.384 0.407:0.407:0.407 0.453:0.453:0.453 0.530:0.530:0.530 0.683:0.683:0.683 0.791:0.791:0.791)
	    (0.376:0.376:0.376 0.382:0.382:0.382 0.405:0.405:0.405 0.451:0.451:0.451 0.528:0.528:0.528 0.682:0.682:0.682 0.789:0.789:0.789)
	    (0.370:0.370:0.370 0.376:0.376:0.376 0.399:0.399:0.399 0.445:0.445:0.445 0.522:0.522:0.522 0.676:0.676:0.676 0.783:0.783:0.783)
	    (0.358:0.358:0.358 0.364:0.364:0.364 0.387:0.387:0.387 0.433:0.433:0.433 0.510:0.510:0.510 0.663:0.663:0.663 0.771:0.771:0.771)
	    (0.337:0.337:0.337 0.343:0.343:0.343 0.366:0.366:0.366 0.412:0.412:0.412 0.489:0.489:0.489 0.642:0.642:0.642 0.750:0.750:0.750)
	    (0.296:0.296:0.296 0.302:0.302:0.302 0.325:0.325:0.325 0.371:0.371:0.371 0.448:0.448:0.448 0.601:0.601:0.601 0.709:0.709:0.709)
	    (0.267:0.267:0.267 0.273:0.273:0.273 0.296:0.296:0.296 0.342:0.342:0.342 0.419:0.419:0.419 0.572:0.572:0.572 0.680:0.680:0.680)
	  )))
TIMING_model (tch_tcsb_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (
	    (0.378:0.378:0.378 0.384:0.384:0.384 0.407:0.407:0.407 0.453:0.453:0.453 0.530:0.530:0.530 0.683:0.683:0.683 0.791:0.791:0.791)
	    (0.376:0.376:0.376 0.382:0.382:0.382 0.405:0.405:0.405 0.451:0.451:0.451 0.528:0.528:0.528 0.682:0.682:0.682 0.789:0.789:0.789)
	    (0.370:0.370:0.370 0.376:0.376:0.376 0.399:0.399:0.399 0.445:0.445:0.445 0.522:0.522:0.522 0.676:0.676:0.676 0.783:0.783:0.783)
	    (0.358:0.358:0.358 0.364:0.364:0.364 0.387:0.387:0.387 0.433:0.433:0.433 0.510:0.510:0.510 0.663:0.663:0.663 0.771:0.771:0.771)
	    (0.337:0.337:0.337 0.343:0.343:0.343 0.366:0.366:0.366 0.412:0.412:0.412 0.489:0.489:0.489 0.642:0.642:0.642 0.750:0.750:0.750)
	    (0.296:0.296:0.296 0.302:0.302:0.302 0.325:0.325:0.325 0.371:0.371:0.371 0.448:0.448:0.448 0.601:0.601:0.601 0.709:0.709:0.709)
	    (0.267:0.267:0.267 0.273:0.273:0.273 0.296:0.296:0.296 0.342:0.342:0.342 0.419:0.419:0.419 0.572:0.572:0.572 0.680:0.680:0.680)
	  )))
TIMING_model (tch_tchb_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.025:0.025:0.025 0.019:0.019:0.019 0.010:0.010:0.010 0.007:0.007:0.007 0.002:0.002:0.002 0.000:0.000:0.000 0.000:0.000:0.000)
	  )))
TIMING_model (tch_tchb_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.025:0.025:0.025 0.019:0.019:0.019 0.010:0.010:0.010 0.007:0.007:0.007 0.002:0.002:0.002 0.000:0.000:0.000 0.000:0.000:0.000)
	  )))
TIMING_model (tch_tdsb_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.002:0.002:0.002 0.043:0.043:0.043 0.110:0.110:0.110 0.245:0.245:0.245 0.339:0.339:0.339)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.001:0.001:0.001 0.041:0.041:0.041 0.109:0.109:0.109 0.243:0.243:0.243 0.338:0.338:0.338)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.035:0.035:0.035 0.102:0.102:0.102 0.237:0.237:0.237 0.332:0.332:0.332)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.023:0.023:0.023 0.090:0.090:0.090 0.225:0.225:0.225 0.319:0.319:0.319)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.002:0.002:0.002 0.069:0.069:0.069 0.204:0.204:0.204 0.299:0.299:0.299)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.028:0.028:0.028 0.163:0.163:0.163 0.257:0.257:0.257)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.134:0.134:0.134 0.228:0.228:0.228)
	  )))
TIMING_model (tch_tdsb_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.002:0.002:0.002 0.043:0.043:0.043 0.110:0.110:0.110 0.245:0.245:0.245 0.339:0.339:0.339)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.001:0.001:0.001 0.041:0.041:0.041 0.109:0.109:0.109 0.243:0.243:0.243 0.338:0.338:0.338)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.035:0.035:0.035 0.102:0.102:0.102 0.237:0.237:0.237 0.332:0.332:0.332)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.023:0.023:0.023 0.090:0.090:0.090 0.225:0.225:0.225 0.319:0.319:0.319)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.002:0.002:0.002 0.069:0.069:0.069 0.204:0.204:0.204 0.299:0.299:0.299)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.028:0.028:0.028 0.163:0.163:0.163 0.257:0.257:0.257)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.134:0.134:0.134 0.228:0.228:0.228)
	  )))
TIMING_model (tch_tdhb_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (
	    (0.151:0.151:0.151 0.151:0.151:0.151 0.150:0.150:0.150 0.148:0.148:0.148 0.146:0.146:0.146 0.141:0.141:0.141 0.138:0.138:0.138)
	    (0.153:0.153:0.153 0.152:0.152:0.152 0.152:0.152:0.152 0.150:0.150:0.150 0.148:0.148:0.148 0.143:0.143:0.143 0.139:0.139:0.139)
	    (0.159:0.159:0.159 0.159:0.159:0.159 0.158:0.158:0.158 0.156:0.156:0.156 0.154:0.154:0.154 0.149:0.149:0.149 0.145:0.145:0.145)
	    (0.171:0.171:0.171 0.171:0.171:0.171 0.170:0.170:0.170 0.169:0.169:0.169 0.166:0.166:0.166 0.161:0.161:0.161 0.158:0.158:0.158)
	    (0.192:0.192:0.192 0.192:0.192:0.192 0.191:0.191:0.191 0.189:0.189:0.189 0.187:0.187:0.187 0.182:0.182:0.182 0.178:0.178:0.178)
	    (0.233:0.233:0.233 0.233:0.233:0.233 0.232:0.232:0.232 0.231:0.231:0.231 0.228:0.228:0.228 0.223:0.223:0.223 0.220:0.220:0.220)
	    (0.262:0.262:0.262 0.262:0.262:0.262 0.261:0.261:0.261 0.260:0.260:0.260 0.257:0.257:0.257 0.252:0.252:0.252 0.249:0.249:0.249)
	  )))
TIMING_model (tch_tdhb_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (
	    (0.151:0.151:0.151 0.151:0.151:0.151 0.150:0.150:0.150 0.148:0.148:0.148 0.146:0.146:0.146 0.141:0.141:0.141 0.138:0.138:0.138)
	    (0.153:0.153:0.153 0.152:0.152:0.152 0.152:0.152:0.152 0.150:0.150:0.150 0.148:0.148:0.148 0.143:0.143:0.143 0.139:0.139:0.139)
	    (0.159:0.159:0.159 0.159:0.159:0.159 0.158:0.158:0.158 0.156:0.156:0.156 0.154:0.154:0.154 0.149:0.149:0.149 0.145:0.145:0.145)
	    (0.171:0.171:0.171 0.171:0.171:0.171 0.170:0.170:0.170 0.169:0.169:0.169 0.166:0.166:0.166 0.161:0.161:0.161 0.158:0.158:0.158)
	    (0.192:0.192:0.192 0.192:0.192:0.192 0.191:0.191:0.191 0.189:0.189:0.189 0.187:0.187:0.187 0.182:0.182:0.182 0.178:0.178:0.178)
	    (0.233:0.233:0.233 0.233:0.233:0.233 0.232:0.232:0.232 0.231:0.231:0.231 0.228:0.228:0.228 0.223:0.223:0.223 0.220:0.220:0.220)
	    (0.262:0.262:0.262 0.262:0.262:0.262 0.261:0.261:0.261 0.260:0.260:0.260 0.257:0.257:0.257 0.252:0.252:0.252 0.249:0.249:0.249)
	  )))
TIMING_model (period_tcyca (const (2.28619633995412)))
TIMING_model (tpw_tckla (const (0.2355)))
TIMING_model (tpw_tckha (const (0.1507)))
TIMING_model (period_tcycb (const (2.18825814902234)))
TIMING_model (tpw_tcklb (const (0.2007)))
TIMING_model (tpw_tckhb (const (0.1412)))
TIMING_model (tch_tcc (const (1.08471575255478)))
TIMING_model (sl_qar 	(spline
	  (load_axis 0.000 0.015 0.062 0.155 0.311 0.777 1.250)
	  ((0.061 0.093 0.196 0.398 0.737 1.751 2.780))))
TIMING_model (sl_qaf 	(spline
	  (load_axis 0.000 0.015 0.062 0.155 0.311 0.777 1.250)
	  ((0.081 0.104 0.175 0.315 0.551 1.255 1.970))))
TIMING_model (dly_taar 	(spline
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (load_axis 0.000 0.015 0.062 0.155 0.311 0.777 1.250)
	  (
	    (1.649:1.649:1.649 1.665:1.665:1.665 1.714:1.714:1.714 1.813:1.813:1.813 1.978:1.978:1.978 2.471:2.471:2.471 2.971:2.971:2.971)
	    (1.650:1.650:1.650 1.666:1.666:1.666 1.716:1.716:1.716 1.814:1.814:1.814 1.979:1.979:1.979 2.472:2.472:2.472 2.973:2.973:2.973)
	    (1.656:1.656:1.656 1.672:1.672:1.672 1.722:1.722:1.722 1.821:1.821:1.821 1.986:1.986:1.986 2.479:2.479:2.479 2.979:2.979:2.979)
	    (1.669:1.669:1.669 1.685:1.685:1.685 1.734:1.734:1.734 1.833:1.833:1.833 1.998:1.998:1.998 2.491:2.491:2.491 2.992:2.992:2.992)
	    (1.690:1.690:1.690 1.705:1.705:1.705 1.755:1.755:1.755 1.854:1.854:1.854 2.019:2.019:2.019 2.512:2.512:2.512 3.012:3.012:3.012)
	    (1.731:1.731:1.731 1.747:1.747:1.747 1.796:1.796:1.796 1.895:1.895:1.895 2.060:2.060:2.060 2.553:2.553:2.553 3.053:3.053:3.053)
	    (1.760:1.760:1.760 1.776:1.776:1.776 1.825:1.825:1.825 1.924:1.924:1.924 2.089:2.089:2.089 2.582:2.582:2.582 3.082:3.082:3.082)
	  )))
TIMING_model (dly_taaf 	(spline
	  (input_slew_axis 0.010 0.050 0.200 0.500 1.000 2.000 2.700)
	  (load_axis 0.000 0.015 0.062 0.155 0.311 0.777 1.250)
	  (
	    (1.695:1.695:1.695 1.708:1.708:1.708 1.748:1.748:1.748 1.827:1.827:1.827 1.960:1.960:1.960 2.358:2.358:2.358 2.762:2.762:2.762)
	    (1.697:1.697:1.697 1.709:1.709:1.709 1.750:1.750:1.750 1.829:1.829:1.829 1.962:1.962:1.962 2.360:2.360:2.360 2.764:2.764:2.764)
	    (1.703:1.703:1.703 1.716:1.716:1.716 1.756:1.756:1.756 1.835:1.835:1.835 1.968:1.968:1.968 2.366:2.366:2.366 2.770:2.770:2.770)
	    (1.715:1.715:1.715 1.728:1.728:1.728 1.768:1.768:1.768 1.848:1.848:1.848 1.981:1.981:1.981 2.378:2.378:2.378 2.782:2.782:2.782)
	    (1.736:1.736:1.736 1.749:1.749:1.749 1.789:1.789:1.789 1.868:1.868:1.868 2.001:2.001:2.001 2.399:2.399:2.399 2.803:2.803:2.803)
	    (1.777:1.777:1.777 1.790:1.790:1.790 1.830:1.830:1.830 1.910:1.910:1.910 2.043:2.043:2.043 2.440:2.440:2.440 2.844:2.844:2.844)
	    (1.806:1.806:1.806 1.819:1.819:1.819 1.859:1.859:1.859 1.938:1.938:1.938 2.072:2.072:2.072 2.469:2.469:2.469 2.873:2.873:2.873)
	  )))

bus(QA[63:0] bustype(output)
 load_limit(warn(1.250) error(2.147483647e3))
 capacitance(0.0)
)
bus(AA[8:0] bustype(input)
 capacitance(0.051)
)
bus(AB[8:0] bustype(input)
 capacitance(0.051)
)
pin(CENA pintype(input)
 capacitance(0.004)
)
pin(CENB pintype(input)
 capacitance(0.003)
)
pin(CLKA clock_pin pintype(input)
 slew_limit(warn(2.700) error(2.700))
 capacitance(0.092)
)
pin(CLKB clock_pin pintype(input)
 slew_limit(warn(2.700) error(2.700))
 capacitance(0.097)
)
bus(DB[63:0] bustype(input)
 capacitance(0.003)
)
pin(VDD pintype(supply) vdrop_limit(0.090))
pin(VSS pintype(ground) vdrop_limit(0.090))
setup (AA[0] => CLKA 01 posedge tch_tasa_rise)
setup (AA[0] => CLKA 10 posedge tch_tasa_fall)
hold (AA[0] => CLKA 01 posedge tch_taha_rise)
hold (AA[0] => CLKA 10 posedge tch_taha_fall)
setup (AA[1] => CLKA 01 posedge tch_tasa_rise)
setup (AA[1] => CLKA 10 posedge tch_tasa_fall)
hold (AA[1] => CLKA 01 posedge tch_taha_rise)
hold (AA[1] => CLKA 10 posedge tch_taha_fall)
setup (AA[2] => CLKA 01 posedge tch_tasa_rise)
setup (AA[2] => CLKA 10 posedge tch_tasa_fall)
hold (AA[2] => CLKA 01 posedge tch_taha_rise)
hold (AA[2] => CLKA 10 posedge tch_taha_fall)
setup (AA[3] => CLKA 01 posedge tch_tasa_rise)
setup (AA[3] => CLKA 10 posedge tch_tasa_fall)
hold (AA[3] => CLKA 01 posedge tch_taha_rise)
hold (AA[3] => CLKA 10 posedge tch_taha_fall)
setup (AA[4] => CLKA 01 posedge tch_tasa_rise)
setup (AA[4] => CLKA 10 posedge tch_tasa_fall)
hold (AA[4] => CLKA 01 posedge tch_taha_rise)
hold (AA[4] => CLKA 10 posedge tch_taha_fall)
setup (AA[5] => CLKA 01 posedge tch_tasa_rise)
setup (AA[5] => CLKA 10 posedge tch_tasa_fall)
hold (AA[5] => CLKA 01 posedge tch_taha_rise)
hold (AA[5] => CLKA 10 posedge tch_taha_fall)
setup (AA[6] => CLKA 01 posedge tch_tasa_rise)
setup (AA[6] => CLKA 10 posedge tch_tasa_fall)
hold (AA[6] => CLKA 01 posedge tch_taha_rise)
hold (AA[6] => CLKA 10 posedge tch_taha_fall)
setup (AA[7] => CLKA 01 posedge tch_tasa_rise)
setup (AA[7] => CLKA 10 posedge tch_tasa_fall)
hold (AA[7] => CLKA 01 posedge tch_taha_rise)
hold (AA[7] => CLKA 10 posedge tch_taha_fall)
setup (AA[8] => CLKA 01 posedge tch_tasa_rise)
setup (AA[8] => CLKA 10 posedge tch_tasa_fall)
hold (AA[8] => CLKA 01 posedge tch_taha_rise)
hold (AA[8] => CLKA 10 posedge tch_taha_fall)
setup (AB[0] => CLKB 01 posedge tch_tasb_rise)
setup (AB[0] => CLKB 10 posedge tch_tasb_fall)
hold (AB[0] => CLKB 01 posedge tch_tahb_rise)
hold (AB[0] => CLKB 10 posedge tch_tahb_fall)
setup (AB[1] => CLKB 01 posedge tch_tasb_rise)
setup (AB[1] => CLKB 10 posedge tch_tasb_fall)
hold (AB[1] => CLKB 01 posedge tch_tahb_rise)
hold (AB[1] => CLKB 10 posedge tch_tahb_fall)
setup (AB[2] => CLKB 01 posedge tch_tasb_rise)
setup (AB[2] => CLKB 10 posedge tch_tasb_fall)
hold (AB[2] => CLKB 01 posedge tch_tahb_rise)
hold (AB[2] => CLKB 10 posedge tch_tahb_fall)
setup (AB[3] => CLKB 01 posedge tch_tasb_rise)
setup (AB[3] => CLKB 10 posedge tch_tasb_fall)
hold (AB[3] => CLKB 01 posedge tch_tahb_rise)
hold (AB[3] => CLKB 10 posedge tch_tahb_fall)
setup (AB[4] => CLKB 01 posedge tch_tasb_rise)
setup (AB[4] => CLKB 10 posedge tch_tasb_fall)
hold (AB[4] => CLKB 01 posedge tch_tahb_rise)
hold (AB[4] => CLKB 10 posedge tch_tahb_fall)
setup (AB[5] => CLKB 01 posedge tch_tasb_rise)
setup (AB[5] => CLKB 10 posedge tch_tasb_fall)
hold (AB[5] => CLKB 01 posedge tch_tahb_rise)
hold (AB[5] => CLKB 10 posedge tch_tahb_fall)
setup (AB[6] => CLKB 01 posedge tch_tasb_rise)
setup (AB[6] => CLKB 10 posedge tch_tasb_fall)
hold (AB[6] => CLKB 01 posedge tch_tahb_rise)
hold (AB[6] => CLKB 10 posedge tch_tahb_fall)
setup (AB[7] => CLKB 01 posedge tch_tasb_rise)
setup (AB[7] => CLKB 10 posedge tch_tasb_fall)
hold (AB[7] => CLKB 01 posedge tch_tahb_rise)
hold (AB[7] => CLKB 10 posedge tch_tahb_fall)
setup (AB[8] => CLKB 01 posedge tch_tasb_rise)
setup (AB[8] => CLKB 10 posedge tch_tasb_fall)
hold (AB[8] => CLKB 01 posedge tch_tahb_rise)
hold (AB[8] => CLKB 10 posedge tch_tahb_fall)
setup (CENA => CLKA 01 posedge tch_tcsa_rise)
setup (CENA => CLKA 10 posedge tch_tcsa_fall)
hold (CENA => CLKA 01 posedge tch_tcha_rise)
hold (CENA => CLKA 10 posedge tch_tcha_fall)
setup (CENB => CLKB 01 posedge tch_tcsb_rise)
setup (CENB => CLKB 10 posedge tch_tcsb_fall)
hold (CENB => CLKB 01 posedge tch_tchb_rise)
hold (CENB => CLKB 10 posedge tch_tchb_fall)
setup (DB[0] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[0] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[0] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[0] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[1] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[1] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[1] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[1] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[2] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[2] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[2] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[2] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[3] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[3] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[3] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[3] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[4] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[4] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[4] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[4] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[5] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[5] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[5] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[5] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[6] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[6] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[6] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[6] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[7] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[7] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[7] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[7] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[8] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[8] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[8] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[8] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[9] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[9] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[9] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[9] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[10] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[10] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[10] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[10] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[11] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[11] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[11] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[11] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[12] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[12] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[12] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[12] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[13] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[13] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[13] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[13] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[14] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[14] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[14] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[14] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[15] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[15] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[15] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[15] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[16] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[16] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[16] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[16] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[17] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[17] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[17] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[17] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[18] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[18] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[18] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[18] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[19] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[19] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[19] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[19] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[20] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[20] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[20] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[20] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[21] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[21] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[21] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[21] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[22] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[22] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[22] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[22] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[23] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[23] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[23] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[23] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[24] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[24] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[24] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[24] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[25] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[25] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[25] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[25] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[26] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[26] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[26] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[26] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[27] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[27] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[27] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[27] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[28] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[28] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[28] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[28] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[29] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[29] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[29] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[29] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[30] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[30] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[30] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[30] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[31] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[31] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[31] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[31] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[32] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[32] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[32] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[32] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[33] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[33] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[33] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[33] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[34] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[34] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[34] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[34] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[35] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[35] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[35] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[35] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[36] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[36] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[36] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[36] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[37] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[37] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[37] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[37] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[38] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[38] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[38] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[38] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[39] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[39] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[39] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[39] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[40] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[40] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[40] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[40] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[41] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[41] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[41] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[41] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[42] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[42] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[42] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[42] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[43] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[43] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[43] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[43] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[44] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[44] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[44] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[44] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[45] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[45] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[45] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[45] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[46] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[46] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[46] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[46] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[47] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[47] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[47] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[47] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[48] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[48] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[48] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[48] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[49] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[49] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[49] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[49] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[50] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[50] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[50] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[50] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[51] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[51] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[51] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[51] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[52] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[52] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[52] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[52] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[53] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[53] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[53] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[53] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[54] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[54] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[54] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[54] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[55] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[55] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[55] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[55] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[56] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[56] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[56] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[56] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[57] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[57] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[57] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[57] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[58] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[58] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[58] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[58] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[59] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[59] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[59] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[59] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[60] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[60] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[60] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[60] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[61] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[61] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[61] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[61] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[62] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[62] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[62] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[62] => CLKB 10 posedge tch_tdhb_fall)
setup (DB[63] => CLKB 01 posedge tch_tdsb_rise)
setup (DB[63] => CLKB 10 posedge tch_tdsb_fall)
hold (DB[63] => CLKB 01 posedge tch_tdhb_rise)
hold (DB[63] => CLKB 10 posedge tch_tdhb_fall)
period (CLKA 01 period_tcyca)
mpwl (CLKA tpw_tckla)
mpwh (CLKA tpw_tckha)
period (CLKB 01 period_tcycb)
mpwl (CLKB tpw_tcklb)
mpwh (CLKB tpw_tckhb)
setup (CLKA => CLKB 01 posEdge tch_tcc)
setup (CLKB => CLKA 01 posEdge tch_tcc)
path (CLKA => QA[0] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[0] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[1] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[1] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[2] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[2] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[3] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[3] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[4] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[4] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[5] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[5] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[6] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[6] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[7] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[7] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[8] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[8] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[9] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[9] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[10] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[10] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[11] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[11] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[12] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[12] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[13] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[13] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[14] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[14] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[15] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[15] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[16] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[16] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[17] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[17] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[18] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[18] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[19] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[19] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[20] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[20] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[21] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[21] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[22] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[22] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[23] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[23] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[24] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[24] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[25] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[25] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[26] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[26] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[27] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[27] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[28] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[28] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[29] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[29] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[30] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[30] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[31] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[31] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[32] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[32] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[33] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[33] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[34] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[34] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[35] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[35] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[36] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[36] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[37] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[37] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[38] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[38] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[39] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[39] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[40] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[40] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[41] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[41] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[42] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[42] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[43] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[43] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[44] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[44] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[45] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[45] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[46] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[46] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[47] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[47] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[48] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[48] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[49] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[49] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[50] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[50] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[51] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[51] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[52] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[52] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[53] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[53] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[54] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[54] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[55] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[55] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[56] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[56] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[57] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[57] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[58] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[58] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[59] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[59] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[60] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[60] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[61] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[61] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[62] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[62] 01 10 delay(dly_taaf) slew(sl_qaf))
path (CLKA => QA[63] 01 01 delay(dly_taar) slew(sl_qar))
path (CLKA => QA[63] 01 10 delay(dly_taaf) slew(sl_qaf))
)
