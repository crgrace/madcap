


// mcp program to test 4-node LArPix Hydra Network packet storm w/ CDS

$display("RUNNING VER_HYDRA_STORM_CDS.MCP");
$display("run length = 400 us");
$display("Verify ability to handle hit storm with hydra network");
$display("This simulation is done in CDS mode");
$display("Hydra network comprises four LArPix chips");
$display("Two separate chips (Chip 1 and Chip 3) will get simultaneous");
$display("hits on eight channels each.");
$display("Expected return: 16 total packets (8 CDS, 8 data)");
$display("4 data packets from chip 1 (ID = 8'h02)");
$display("4 data packets from chip 3 (ID = 8'h06)");

$display("Begin Simulation.\n");

#100
  $display("Change Chip ID for Chip 0 to 8'h04");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,CHIP_ID,8'h04);

#100
  $display("Enable Downstream PISO0[3] (for returning data to FPGA)");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h04,ENABLE_PISO_DOWN,8'h08);

#100
  $display("Enable Upstream PISO0[1] (for writing data to chip1)");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h04,ENABLE_PISO_UP,8'h02);

#100
  $display("Change Chip ID for Chip 1 to 8'h02");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,CHIP_ID,8'h02);

#100
  $display("Disable Upstream PISO1[3:0] (Chip 1 is leaf node)");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h02,ENABLE_PISO_UP,8'h00);

#100
  $display("Enable Downstream PISO1[3] (for returning data to FPGA)");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h02,ENABLE_PISO_DOWN,8'h08);

#100
  // note also keep PISO0[1] enabled
  $display("Enable Upstream PISO0[0] (for writing data to Chip 2)");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h04,ENABLE_PISO_UP,8'h03);

#100
  $display("Change Chip ID for Chip 2 to 8'h0F");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,CHIP_ID,8'h0F);
#100
  $display("Enable Upstream PISO2[1] (for writing data to Chip 3)");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h0F,ENABLE_PISO_UP,8'h02);

#100
  $display("Enable Downstream PISO2[2] (for returning data to FPGA)");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h0F,ENABLE_PISO_DOWN,8'h04);

#100
  $display("Change Chip ID for Chip 03 to 8'h06");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,CHIP_ID,8'h06);

#100
  $display("Disable Upstream PISO3[3:0] (Chip 3 is leaf node)");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h06,ENABLE_PISO_UP,8'h00);

#100
  $display("Enable Downstream PISO3[3] (for returning data to FPGA)");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h06,ENABLE_PISO_DOWN,8'h08);

#100
$display("write 10d to GLOBAL_THRESH - Chip 1"); 
sendWordToLarpix(CONFIG_WRITE_OP,8'h02,GLOBAL_THRESH,8'h0a);

#100
  $display("enable channels 0-3 (enable CSA) - Chip 1");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h02,CSA_ENABLE,8'h0F);

#100
  $display("enable channels 0-3 (turn off channel mask) - Chip 1");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h02,CHANNEL_MASK,8'hF0);

#100
$display("write 10d to GLOBAL_THRESH - Chip 3"); 
sendWordToLarpix(CONFIG_WRITE_OP,8'h06,GLOBAL_THRESH,8'h0a);

#100
  $display("enable channels 0-3 (enable CSA) - Chip 3");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h06,CSA_ENABLE,8'h0F);

#100
  $display("enable channels 0-3 (turn off channel mask) - Chip 3");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h06,CHANNEL_MASK,8'hF0);

#100
  $display("enable CDS mode - Broadcast");
  sendWordToLarpix(CONFIG_WRITE_OP,8'hFF,DIGITAL,8'h01);

#100
  $display("Wait for commands to filter through Hydra network");
  $display("Then it's on like Donkey Kong!\n");

#25000
  for (int i = 0; i < 8; i++) begin
    charge_in_r[i] = -5.6e-15; // two mips (140 mV at CSA)
    $display("charge deposition in channel %d", i);
#20
    charge_in_r[i] = 0.0;  
end  







