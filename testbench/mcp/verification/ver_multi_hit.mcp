// mcp program to test a single LArPix instance
// configures minimum required to enable a single channel
// specifically tests basic multi-hit capability 

$display("RUNNING VER_MULTI_HIT.MCP");
$display("run length = 300 us");
$display("Expect 16 total hits");
$display("First 8 hits, then another 8 hits later");
$display("Hits on channels 0 through 7");

#10000
$display("write 10d to GLOBAL_THRESH"); 
sendWordToLarpix(CONFIG_WRITE_OP,8'h01,GLOBAL_THRESH,8'h0a);

#10000
  $display("Enable Downstream PISO2 (for returning data to FPGA)");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,ENABLE_PISO_DOWN,8'h02);

#10000
 $display("Read Back test: 10d/0x0A expected");
  sendWordToLarpix(CONFIG_READ_OP,8'h01,GLOBAL_THRESH,8'h01);

#10000
  $display("enable channels 0 - 7 (enable CSA)");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,CSA_ENABLE,8'hFF);

#10000
  $display("enable channels 0-7 (turn off channel mask)");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,CHANNEL_MASK,0);

//#10000 $display("put LArPix in CDS mode");
//  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,DIGITAL,8'h01);

//#10000
//  $display("Read Back test: 255d/0xFF expected");
//  sendWordToLarpix(CONFIG_READ_OP,8'h01,CSA_ENABLE,8'h01);

// simulate charge input
//
#9867

for (int i = 0; i < 8; i++) begin
    charge_in_r[i] = -2.8e-15;
    $display("charge deposition in channel %d", i);
#20
    charge_in_r[i] = 0.0;  
end  

#1211

for (int i = 0; i < 8; i++) begin
    charge_in_r[i] = -2.8e-15;
    $display("charge deposition in channel %d", i);
#20
    charge_in_r[i] = 0.0;  
end  



