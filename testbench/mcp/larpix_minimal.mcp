// minimal mcp program to test a single LArPix instance
// configures minimum required to enable a single channel

$display("RUNNING LARPIX_MINIMAL.MCP");

#100
$display("write 10d to GLOBAL_THRESH"); 
sendWordToLarpix(CONFIG_WRITE_OP,8'h01,GLOBAL_THRESH,8'h0a);

#100
  $display("Enable FIFO diagnostics");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,DIGITAL,8'h44);

#100
  $display("Enable Downstream PISO0 (for returning data to FPGA)");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,ENABLE_PISO_DOWN,8'h01);

#100
  $display("Read Back test: 10d/0x0A expected");
  sendWordToLarpix(CONFIG_READ_OP,8'h01,GLOBAL_THRESH,8'h01);

#100
  $display("enable channels 0 - 7 (enable CSA)");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,CSA_ENABLE,8'hFF);

#100 
  $display("enable channels 0-7 (turn off channel mask)");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,CHANNEL_MASK,0);

#100
  $display("Read Back test: 255d/0xFF expected");
  sendWordToLarpix(CONFIG_READ_OP,8'h01,CSA_ENABLE,8'h01);

// simulate charge input
//
#10000

for (int i = 0; i < 8; i++) begin // TP: changed from 1 channel to 8 channels
    charge_in_r[i] = -2.8e-15;
    $display("charge deposition in channel %d", i);
end
#20
for (int i = 0; i < 8; i++) begin // TP: changed from 1 channel to 8 channels
    charge_in_r[i] = 0.0;  
end  
#200
for (int i = 0; i < 8; i++) begin // TP: changed from 1 channel to 8 channels
    charge_in_r[i] = -2.8e-15;
    $display("charge deposition in channel %d", i);
end
#20
for (int i = 0; i < 8; i++) begin // TP: changed from 1 channel to 8 channels
    charge_in_r[i] = 0.0;  
end  


