// mcp program to test LightPix dark count filtering 

  $display("LIGHTPIX_EVENT.MCP RUNNING");

#10000
  $display("Enable Downstream PISO0 (for returning data to FPGA)");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,ENABLE_PISO_DOWN,8'h01);


//#10000
//  $display("READ OUT PER_CHANNEL_MASK[0] DEFAULT (should be 8'hFF)"); 
//  sendWordToLarpix(CONFIG_READ_OP,8'h01,CHANNEL_MASK,8'h0a);

#10000
  $display("write 10d to GLOBAL_THRESH"); 
  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,GLOBAL_THRESH,8'h0a);

// #10000
//  $display("READ OUT GLOBAL THRESHOLD UPDATED (should be 10d)"); 
//  sendWordToLarpix(CONFIG_READ_OP,8'h01,GLOBAL_THRESH,8'h0a);

//#10000
//  $display("Update CLK register to 11");
//  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,DIGITAL,8'h18);

//#10000
//  $display("Update shadow reset cycles register to 15");
//  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,SPARE,8'h0F);

//#10000
//  $display("READ OUT GLOBAL THRESHOLD DEFAULT (should be 8'hFF)"); 
//  sendWordToLarpix(CONFIG_READ_OP,8'h01,GLOBAL_THRESH,8'h0a);

//$display("Execute Soft Reset");
//#10000 reset_n = 0;
//#882 reset_n = 1;


//#10000
//  $display("READ OUT GLOBAL THRESHOLD DEFAULT (should be 8'hFF)"); 
//  sendWordToLarpix(CONFIG_READ_OP,8'h01,GLOBAL_THRESH,8'h0a);



//#10000
//  $display("Enable FIFO diagnostics");
//  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,DIGITAL,8'h04);

//#10000
//  $display("Configure LightPix hit threshold");
//  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,LIGHTPIX0,8'h04);

//#10000
//  $display("Configure LightPix timeout");
//  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,LIGHTPIX1,8'hff);

//#10000
//  $display("Disable hit veto");
//  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,ENABLE_TRIG_MODES,8'h00);

#10000 
  $display("enable channels 0 - 7 (turn off channel mask)");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,CHANNEL_MASK,0);
#10000
  $display("enable channels 0 - 7 (enable CSA)");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,CSA_ENABLE,8'hFF);
//#10000
//  $display("READ OUT CSA_ENABLE 0 - 7");
//  sendWordToLarpix(CONFIG_READ_OP,8'h01,CSA_ENABLE,8'hFF);
//#10000
//  $display("enable channels 8 - 15 (turn off channel mask)");
//  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,CHANNEL_MASK+1,0);
//#10000
//  $display("enable channels 16 - 23 (turn off channel mask)");
//  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,CHANNEL_MASK+2,0);
//#10000
//  $display("enable channels 24 - 31 (turn off channel mask)");
//  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,CHANNEL_MASK+3,0);
//#10000
//  $display("enable channels 32 - 39 (turn off channel mask)");
// sendWordToLarpix(CONFIG_WRITE_OP,8'h01,CHANNEL_MASK+4,0);
//#10000
//  $display("enable channels 40 - 47 (turn off channel mask)");
//  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,CHANNEL_MASK+5,0);
//#10000
//  $display("enable channels 48 - 55 (turn off channel mask)");
//  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,CHANNEL_MASK+6,0);
//#10000
//  $display("enable channels 48 - 55 (enable CSA)");
//  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,CSA_ENABLE+6,8'hFF);
#10000
  $display("enable channels 56 - 63 (turn off channel mask)");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,CHANNEL_MASK+7,0);
#10000
  $display("enable channels 56 - 63 (enable CSA)");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,CSA_ENABLE+7,8'hFF);

/*
#10000 
  $display("enable channels 0 - 7 (turn off extern trigger mask)");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,EXTERN_TRIG_MASK,0);
#10000
  $display("enable channels 8 - 15 (turn off extern trigger mask)");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,EXTERN_TRIG_MASK+1,8'h0);
#10000
  $display("enable channels 16 - 23 (turn off extern trigger mask)");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,EXTERN_TRIG_MASK+2,0);
#10000
  $display("enable channels 24 - 31 (turn off extern trigger mask)");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,EXTERN_TRIG_MASK+3,0);
#10000
  $display("enable channels 32 - 39 (turn off extern trigger mask)");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,EXTERN_TRIG_MASK+4,0);
#10000
  $display("enable channels 40 - 47 (turn off extern trigger mask)");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,EXTERN_TRIG_MASK+5,0);
#10000
  $display("enable channels 48 - 55 (turn off extern trigger mask)");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,EXTERN_TRIG_MASK+6,0);
#10000
  $display("enable channels 56 - 63 (turn off extern trigger mask)");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,EXTERN_TRIG_MASK+7,0);
*/
#10000
  $display("READY FOR ACTION");

/*
#10000
  $display("set up sacrificial channel 0 (cross trigger)");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,CROSS_TRIG_MASK,8'hFE);


#10000 
  $display("Put in cross trigger mode (clear vetos)");
  sendWordToLarpix(CONFIG_WRITE_OP,8'h01,ENABLE_TRIG_MODES,8'h01);



#10000
  $display("READ OUT DAC VREF (AFTER CLK CHANGE)"); 
  sendWordToLarpix(CONFIG_READ_OP,8'h01,DAC_VREF,8'h0a);
*/

// simulate charge input
// 


$display("HERE WE GO!");
//#596000
$display("q hit! Channel 0 and 63");

// simulate charge input

#200 charge_in_r[63] = -2.8e-15; // electron MIP (70 mV at CSA)
#20 charge_in_r[63] = 0.0;


#1e3 charge_in_r[0] = -2.8e-15; // electron MIP (70 mV at CSA)

$display("q hit! Channel 63");
//charge_in_r[1] = -2.8e-15; // electron MIP (70 mV at CSA)
#20 charge_in_r[0] = 0.0;
//charge_in_r[1] = 0.0;
#1000 charge_in_r[63] = -5.6e-15;
#20 charge_in_r[63] = 0.0;
#1e3 $display("q hit! Channel 0, 1, 56 & 57");
charge_in_r[1] = -2.8e-15;
charge_in_r[0] = -5.6e-15;
charge_in_r[56] = -5.6e-15;
charge_in_r[57] = -5.6e-15;
#20 charge_in_r[0] = 0.0;
charge_in_r[1] = 0.0;
charge_in_r[56] = 0.0;
charge_in_r[57] = 0.0;

/*

#10000
  for (int hit = 0; hit < 10; hit++) begin
#90006
    $display("\n***************** HIT %d ****************** \n",hit);
    for (int i = 0; i < 7; i++) begin
      charge_in_r[i] = -2.8e-15;
    end  
#20
    for (int i = 0; i < 64; i++) begin
      charge_in_r[i] = 0.0;
    end
  end
*/
